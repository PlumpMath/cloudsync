Saved package config for CloudSync-0.0.1 written by Cabal-1.18.1 using ghc-7.4
LocalBuildInfo {configFlags = ConfigFlags {configPrograms = [], configProgramPaths = [], configProgramArgs = [], configProgramPathExtra = [], configHcFlavor = Flag GHC, configHcPath = NoFlag, configHcPkg = NoFlag, configVanillaLib = Flag True, configProfLib = Flag False, configSharedLib = NoFlag, configDynExe = Flag False, configProfExe = Flag False, configConfigureArgs = [], configOptimization = Flag NormalOptimisation, configProgPrefix = Flag "", configProgSuffix = Flag "", configInstallDirs = InstallDirs {prefix = Flag "/home/user/.cabal", bindir = NoFlag, libdir = NoFlag, libsubdir = NoFlag, dynlibdir = NoFlag, libexecdir = NoFlag, progdir = NoFlag, includedir = NoFlag, datadir = NoFlag, datasubdir = NoFlag, docdir = NoFlag, mandir = NoFlag, htmldir = NoFlag, haddockdir = NoFlag, sysconfdir = NoFlag}, configScratchDir = NoFlag, configExtraLibDirs = [], configExtraIncludeDirs = [], configDistPref = Flag "dist", configVerbosity = Flag Normal, configUserInstall = Flag True, configPackageDBs = [], configGHCiLib = Flag False, configSplitObjs = Flag False, configStripExes = Flag True, configConstraints = [Dependency (PackageName "template-haskell") (ThisVersion (Version {versionBranch = [2,7,0,0], versionTags = []})),Dependency (PackageName "syb") (ThisVersion (Version {versionBranch = [0,3,6,1], versionTags = []})),Dependency (PackageName "stm") (ThisVersion (Version {versionBranch = [2,4,2], versionTags = []})),Dependency (PackageName "primitive") (ThisVersion (Version {versionBranch = [0,5,0,1], versionTags = []})),Dependency (PackageName "old-time") (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []})),Dependency (PackageName "network") (ThisVersion (Version {versionBranch = [2,4,2,0], versionTags = []})),Dependency (PackageName "hashtables") (ThisVersion (Version {versionBranch = [1,1,2,1], versionTags = []})),Dependency (PackageName "ghc-prim") (ThisVersion (Version {versionBranch = [0,2,0,0], versionTags = []})),Dependency (PackageName "distributed-static") (ThisVersion (Version {versionBranch = [0,2,1,1], versionTags = []})),Dependency (PackageName "distributed-process-simplelocalnet") (ThisVersion (Version {versionBranch = [0,2,0,9], versionTags = []})),Dependency (PackageName "distributed-process") (ThisVersion (Version {versionBranch = [0,4,2], versionTags = []})),Dependency (PackageName "containers") (ThisVersion (Version {versionBranch = [0,4,2,1], versionTags = []})),Dependency (PackageName "bytestring") (ThisVersion (Version {versionBranch = [0,10,4,0], versionTags = []})),Dependency (PackageName "binary") (ThisVersion (Version {versionBranch = [0,6,4,0], versionTags = []})),Dependency (PackageName "base") (ThisVersion (Version {versionBranch = [4,5,1,0], versionTags = []})),Dependency (PackageName "Workflow") (ThisVersion (Version {versionBranch = [0,8,0,8], versionTags = []})),Dependency (PackageName "TCache") (ThisVersion (Version {versionBranch = [0,11,0,0], versionTags = []})),Dependency (PackageName "RefSerialize") (ThisVersion (Version {versionBranch = [0,3,1,0], versionTags = []}))], configConfigurationsFlags = [], configTests = Flag False, configBenchmarks = Flag False, configLibCoverage = Flag False}, extraConfigArgs = [], installDirTemplates = InstallDirs {prefix = "/home/user/.cabal", bindir = "$prefix/bin", libdir = "$prefix/lib", libsubdir = "$arch-$os-$compiler/$pkgid", dynlibdir = "$libdir", libexecdir = "$prefix/libexec", progdir = "$libdir/hugs/programs", includedir = "$libdir/$libsubdir/include", datadir = "$prefix/share", datasubdir = "$arch-$os-$compiler/$pkgid", docdir = "$datadir/doc/$arch-$os-$compiler/$pkgid", mandir = "$datadir/man", htmldir = "$docdir/html", haddockdir = "$htmldir", sysconfdir = "$prefix/etc"}, compiler = Compiler {compilerId = CompilerId GHC (Version {versionBranch = [7,4,2], versionTags = []}), compilerLanguages = [(Haskell98,"-XHaskell98"),(Haskell2010,"-XHaskell2010")], compilerExtensions = [(UnknownExtension "Haskell98","-XHaskell98"),(UnknownExtension "Haskell2010","-XHaskell2010"),(EnableExtension Unsafe,"-XUnsafe"),(EnableExtension Trustworthy,"-XTrustworthy"),(EnableExtension Safe,"-XSafe"),(EnableExtension CPP,"-XCPP"),(DisableExtension CPP,"-XNoCPP"),(EnableExtension PostfixOperators,"-XPostfixOperators"),(DisableExtension PostfixOperators,"-XNoPostfixOperators"),(EnableExtension TupleSections,"-XTupleSections"),(DisableExtension TupleSections,"-XNoTupleSections"),(EnableExtension PatternGuards,"-XPatternGuards"),(DisableExtension PatternGuards,"-XNoPatternGuards"),(EnableExtension UnicodeSyntax,"-XUnicodeSyntax"),(DisableExtension UnicodeSyntax,"-XNoUnicodeSyntax"),(EnableExtension MagicHash,"-XMagicHash"),(DisableExtension MagicHash,"-XNoMagicHash"),(EnableExtension PolymorphicComponents,"-XPolymorphicComponents"),(DisableExtension PolymorphicComponents,"-XNoPolymorphicComponents"),(EnableExtension ExistentialQuantification,"-XExistentialQuantification"),(DisableExtension ExistentialQuantification,"-XNoExistentialQuantification"),(EnableExtension KindSignatures,"-XKindSignatures"),(DisableExtension KindSignatures,"-XNoKindSignatures"),(EnableExtension EmptyDataDecls,"-XEmptyDataDecls"),(DisableExtension EmptyDataDecls,"-XNoEmptyDataDecls"),(EnableExtension ParallelListComp,"-XParallelListComp"),(DisableExtension ParallelListComp,"-XNoParallelListComp"),(EnableExtension TransformListComp,"-XTransformListComp"),(DisableExtension TransformListComp,"-XNoTransformListComp"),(EnableExtension MonadComprehensions,"-XMonadComprehensions"),(DisableExtension MonadComprehensions,"-XNoMonadComprehensions"),(EnableExtension ForeignFunctionInterface,"-XForeignFunctionInterface"),(DisableExtension ForeignFunctionInterface,"-XNoForeignFunctionInterface"),(EnableExtension UnliftedFFITypes,"-XUnliftedFFITypes"),(DisableExtension UnliftedFFITypes,"-XNoUnliftedFFITypes"),(EnableExtension InterruptibleFFI,"-XInterruptibleFFI"),(DisableExtension InterruptibleFFI,"-XNoInterruptibleFFI"),(EnableExtension CApiFFI,"-XCApiFFI"),(DisableExtension CApiFFI,"-XNoCApiFFI"),(EnableExtension GHCForeignImportPrim,"-XGHCForeignImportPrim"),(DisableExtension GHCForeignImportPrim,"-XNoGHCForeignImportPrim"),(EnableExtension LiberalTypeSynonyms,"-XLiberalTypeSynonyms"),(DisableExtension LiberalTypeSynonyms,"-XNoLiberalTypeSynonyms"),(EnableExtension Rank2Types,"-XRank2Types"),(DisableExtension Rank2Types,"-XNoRank2Types"),(EnableExtension RankNTypes,"-XRankNTypes"),(DisableExtension RankNTypes,"-XNoRankNTypes"),(EnableExtension ImpredicativeTypes,"-XImpredicativeTypes"),(DisableExtension ImpredicativeTypes,"-XNoImpredicativeTypes"),(EnableExtension TypeOperators,"-XTypeOperators"),(DisableExtension TypeOperators,"-XNoTypeOperators"),(EnableExtension RecursiveDo,"-XRecursiveDo"),(DisableExtension RecursiveDo,"-XNoRecursiveDo"),(EnableExtension DoRec,"-XDoRec"),(DisableExtension DoRec,"-XNoDoRec"),(EnableExtension Arrows,"-XArrows"),(DisableExtension Arrows,"-XNoArrows"),(EnableExtension ParallelArrays,"-XParallelArrays"),(DisableExtension ParallelArrays,"-XNoParallelArrays"),(EnableExtension TemplateHaskell,"-XTemplateHaskell"),(DisableExtension TemplateHaskell,"-XNoTemplateHaskell"),(EnableExtension QuasiQuotes,"-XQuasiQuotes"),(DisableExtension QuasiQuotes,"-XNoQuasiQuotes"),(EnableExtension ImplicitPrelude,"-XImplicitPrelude"),(DisableExtension ImplicitPrelude,"-XNoImplicitPrelude"),(EnableExtension RecordWildCards,"-XRecordWildCards"),(DisableExtension RecordWildCards,"-XNoRecordWildCards"),(EnableExtension NamedFieldPuns,"-XNamedFieldPuns"),(DisableExtension NamedFieldPuns,"-XNoNamedFieldPuns"),(EnableExtension RecordPuns,"-XRecordPuns"),(DisableExtension RecordPuns,"-XNoRecordPuns"),(EnableExtension DisambiguateRecordFields,"-XDisambiguateRecordFields"),(DisableExtension DisambiguateRecordFields,"-XNoDisambiguateRecordFields"),(EnableExtension OverloadedStrings,"-XOverloadedStrings"),(DisableExtension OverloadedStrings,"-XNoOverloadedStrings"),(EnableExtension GADTs,"-XGADTs"),(DisableExtension GADTs,"-XNoGADTs"),(EnableExtension GADTSyntax,"-XGADTSyntax"),(DisableExtension GADTSyntax,"-XNoGADTSyntax"),(EnableExtension ViewPatterns,"-XViewPatterns"),(DisableExtension ViewPatterns,"-XNoViewPatterns"),(EnableExtension TypeFamilies,"-XTypeFamilies"),(DisableExtension TypeFamilies,"-XNoTypeFamilies"),(EnableExtension BangPatterns,"-XBangPatterns"),(DisableExtension BangPatterns,"-XNoBangPatterns"),(EnableExtension MonomorphismRestriction,"-XMonomorphismRestriction"),(DisableExtension MonomorphismRestriction,"-XNoMonomorphismRestriction"),(EnableExtension NPlusKPatterns,"-XNPlusKPatterns"),(DisableExtension NPlusKPatterns,"-XNoNPlusKPatterns"),(EnableExtension DoAndIfThenElse,"-XDoAndIfThenElse"),(DisableExtension DoAndIfThenElse,"-XNoDoAndIfThenElse"),(EnableExtension RebindableSyntax,"-XRebindableSyntax"),(DisableExtension RebindableSyntax,"-XNoRebindableSyntax"),(EnableExtension ConstraintKinds,"-XConstraintKinds"),(DisableExtension ConstraintKinds,"-XNoConstraintKinds"),(EnableExtension PolyKinds,"-XPolyKinds"),(DisableExtension PolyKinds,"-XNoPolyKinds"),(EnableExtension DataKinds,"-XDataKinds"),(DisableExtension DataKinds,"-XNoDataKinds"),(EnableExtension MonoPatBinds,"-XMonoPatBinds"),(DisableExtension MonoPatBinds,"-XNoMonoPatBinds"),(EnableExtension ExplicitForAll,"-XExplicitForAll"),(DisableExtension ExplicitForAll,"-XNoExplicitForAll"),(UnknownExtension "AlternativeLayoutRule","-XAlternativeLayoutRule"),(UnknownExtension "NoAlternativeLayoutRule","-XNoAlternativeLayoutRule"),(UnknownExtension "AlternativeLayoutRuleTransitional","-XAlternativeLayoutRuleTransitional"),(UnknownExtension "NoAlternativeLayoutRuleTransitional","-XNoAlternativeLayoutRuleTransitional"),(EnableExtension DatatypeContexts,"-XDatatypeContexts"),(DisableExtension DatatypeContexts,"-XNoDatatypeContexts"),(EnableExtension NondecreasingIndentation,"-XNondecreasingIndentation"),(DisableExtension NondecreasingIndentation,"-XNoNondecreasingIndentation"),(UnknownExtension "RelaxedLayout","-XRelaxedLayout"),(UnknownExtension "NoRelaxedLayout","-XNoRelaxedLayout"),(EnableExtension TraditionalRecordSyntax,"-XTraditionalRecordSyntax"),(DisableExtension TraditionalRecordSyntax,"-XNoTraditionalRecordSyntax"),(EnableExtension MonoLocalBinds,"-XMonoLocalBinds"),(DisableExtension MonoLocalBinds,"-XNoMonoLocalBinds"),(EnableExtension RelaxedPolyRec,"-XRelaxedPolyRec"),(DisableExtension RelaxedPolyRec,"-XNoRelaxedPolyRec"),(EnableExtension ExtendedDefaultRules,"-XExtendedDefaultRules"),(DisableExtension ExtendedDefaultRules,"-XNoExtendedDefaultRules"),(EnableExtension ImplicitParams,"-XImplicitParams"),(DisableExtension ImplicitParams,"-XNoImplicitParams"),(EnableExtension ScopedTypeVariables,"-XScopedTypeVariables"),(DisableExtension ScopedTypeVariables,"-XNoScopedTypeVariables"),(EnableExtension PatternSignatures,"-XPatternSignatures"),(DisableExtension PatternSignatures,"-XNoPatternSignatures"),(EnableExtension UnboxedTuples,"-XUnboxedTuples"),(DisableExtension UnboxedTuples,"-XNoUnboxedTuples"),(EnableExtension StandaloneDeriving,"-XStandaloneDeriving"),(DisableExtension StandaloneDeriving,"-XNoStandaloneDeriving"),(EnableExtension DeriveDataTypeable,"-XDeriveDataTypeable"),(DisableExtension DeriveDataTypeable,"-XNoDeriveDataTypeable"),(EnableExtension DeriveFunctor,"-XDeriveFunctor"),(DisableExtension DeriveFunctor,"-XNoDeriveFunctor"),(EnableExtension DeriveTraversable,"-XDeriveTraversable"),(DisableExtension DeriveTraversable,"-XNoDeriveTraversable"),(EnableExtension DeriveFoldable,"-XDeriveFoldable"),(DisableExtension DeriveFoldable,"-XNoDeriveFoldable"),(EnableExtension DeriveGeneric,"-XDeriveGeneric"),(DisableExtension DeriveGeneric,"-XNoDeriveGeneric"),(EnableExtension DefaultSignatures,"-XDefaultSignatures"),(DisableExtension DefaultSignatures,"-XNoDefaultSignatures"),(EnableExtension TypeSynonymInstances,"-XTypeSynonymInstances"),(DisableExtension TypeSynonymInstances,"-XNoTypeSynonymInstances"),(EnableExtension FlexibleContexts,"-XFlexibleContexts"),(DisableExtension FlexibleContexts,"-XNoFlexibleContexts"),(EnableExtension FlexibleInstances,"-XFlexibleInstances"),(DisableExtension FlexibleInstances,"-XNoFlexibleInstances"),(EnableExtension ConstrainedClassMethods,"-XConstrainedClassMethods"),(DisableExtension ConstrainedClassMethods,"-XNoConstrainedClassMethods"),(EnableExtension MultiParamTypeClasses,"-XMultiParamTypeClasses"),(DisableExtension MultiParamTypeClasses,"-XNoMultiParamTypeClasses"),(EnableExtension FunctionalDependencies,"-XFunctionalDependencies"),(DisableExtension FunctionalDependencies,"-XNoFunctionalDependencies"),(EnableExtension GeneralizedNewtypeDeriving,"-XGeneralizedNewtypeDeriving"),(DisableExtension GeneralizedNewtypeDeriving,"-XNoGeneralizedNewtypeDeriving"),(EnableExtension OverlappingInstances,"-XOverlappingInstances"),(DisableExtension OverlappingInstances,"-XNoOverlappingInstances"),(EnableExtension UndecidableInstances,"-XUndecidableInstances"),(DisableExtension UndecidableInstances,"-XNoUndecidableInstances"),(EnableExtension IncoherentInstances,"-XIncoherentInstances"),(DisableExtension IncoherentInstances,"-XNoIncoherentInstances"),(EnableExtension PackageImports,"-XPackageImports"),(DisableExtension PackageImports,"-XNoPackageImports")]}, hostPlatform = Platform I386 Linux, buildDir = "dist/build", scratchDir = "dist/scratch", componentsConfigs = [(CLibName,LibComponentLocalBuildInfo {componentPackageDeps = [(InstalledPackageId "RefSerialize-0.3.1.0-f1d5b4ccd3042e76abd870d718497cf0",PackageIdentifier {pkgName = PackageName "RefSerialize", pkgVersion = Version {versionBranch = [0,3,1,0], versionTags = []}}),(InstalledPackageId "TCache-0.11.0.0-184e0986ee04b64972952306503ddb2a",PackageIdentifier {pkgName = PackageName "TCache", pkgVersion = Version {versionBranch = [0,11,0,0], versionTags = []}}),(InstalledPackageId "Workflow-0.8.0.8-7c05ea0f35ae7a0e82ade2e476cb7096",PackageIdentifier {pkgName = PackageName "Workflow", pkgVersion = Version {versionBranch = [0,8,0,8], versionTags = []}}),(InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,5,1,0], versionTags = []}}),(InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,6,4,0], versionTags = []}}),(InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,10,4,0], versionTags = []}}),(InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,4,2,1], versionTags = []}}),(InstalledPackageId "distributed-process-0.4.2-1facd4e5a0c1f48bb668ad1d68364b80",PackageIdentifier {pkgName = PackageName "distributed-process", pkgVersion = Version {versionBranch = [0,4,2], versionTags = []}}),(InstalledPackageId "distributed-process-simplelocalnet-0.2.0.9-f624f098d90b78653c4e3f36c8512029",PackageIdentifier {pkgName = PackageName "distributed-process-simplelocalnet", pkgVersion = Version {versionBranch = [0,2,0,9], versionTags = []}}),(InstalledPackageId "distributed-static-0.2.1.1-ecdac8346613e3bc60e667cd5116a9c0",PackageIdentifier {pkgName = PackageName "distributed-static", pkgVersion = Version {versionBranch = [0,2,1,1], versionTags = []}}),(InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}),(InstalledPackageId "hashtables-1.1.2.1-54d9d9d25444aaba39b693b453d0b555",PackageIdentifier {pkgName = PackageName "hashtables", pkgVersion = Version {versionBranch = [1,1,2,1], versionTags = []}}),(InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f",PackageIdentifier {pkgName = PackageName "network", pkgVersion = Version {versionBranch = [2,4,2,0], versionTags = []}}),(InstalledPackageId "old-time-1.1.0.0-3e0f7b48d6c1d1415ad852e23725fdc1",PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}),(InstalledPackageId "primitive-0.5.0.1-a269ac922313cfdb63da08f8624fba7d",PackageIdentifier {pkgName = PackageName "primitive", pkgVersion = Version {versionBranch = [0,5,0,1], versionTags = []}}),(InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8",PackageIdentifier {pkgName = PackageName "stm", pkgVersion = Version {versionBranch = [2,4,2], versionTags = []}}),(InstalledPackageId "syb-0.3.6.1-7e3d2ec5339017845f3db814d70b7bc5",PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,3,6,1], versionTags = []}}),(InstalledPackageId "template-haskell-2.7.0.0-718c7a8346a48b195831957f3dba0eac",PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,7,0,0], versionTags = []}})], componentLibraries = [LibraryName "HSCloudSync-0.0.1"]},[]),(CExeName "cloudsync",ExeComponentLocalBuildInfo {componentPackageDeps = [(InstalledPackageId "RefSerialize-0.3.1.0-f1d5b4ccd3042e76abd870d718497cf0",PackageIdentifier {pkgName = PackageName "RefSerialize", pkgVersion = Version {versionBranch = [0,3,1,0], versionTags = []}}),(InstalledPackageId "TCache-0.11.0.0-184e0986ee04b64972952306503ddb2a",PackageIdentifier {pkgName = PackageName "TCache", pkgVersion = Version {versionBranch = [0,11,0,0], versionTags = []}}),(InstalledPackageId "Workflow-0.8.0.8-7c05ea0f35ae7a0e82ade2e476cb7096",PackageIdentifier {pkgName = PackageName "Workflow", pkgVersion = Version {versionBranch = [0,8,0,8], versionTags = []}}),(InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,5,1,0], versionTags = []}}),(InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,6,4,0], versionTags = []}}),(InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,10,4,0], versionTags = []}}),(InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,4,2,1], versionTags = []}}),(InstalledPackageId "distributed-process-0.4.2-1facd4e5a0c1f48bb668ad1d68364b80",PackageIdentifier {pkgName = PackageName "distributed-process", pkgVersion = Version {versionBranch = [0,4,2], versionTags = []}}),(InstalledPackageId "distributed-process-simplelocalnet-0.2.0.9-f624f098d90b78653c4e3f36c8512029",PackageIdentifier {pkgName = PackageName "distributed-process-simplelocalnet", pkgVersion = Version {versionBranch = [0,2,0,9], versionTags = []}}),(InstalledPackageId "distributed-static-0.2.1.1-ecdac8346613e3bc60e667cd5116a9c0",PackageIdentifier {pkgName = PackageName "distributed-static", pkgVersion = Version {versionBranch = [0,2,1,1], versionTags = []}}),(InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}),(InstalledPackageId "hashtables-1.1.2.1-54d9d9d25444aaba39b693b453d0b555",PackageIdentifier {pkgName = PackageName "hashtables", pkgVersion = Version {versionBranch = [1,1,2,1], versionTags = []}}),(InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f",PackageIdentifier {pkgName = PackageName "network", pkgVersion = Version {versionBranch = [2,4,2,0], versionTags = []}}),(InstalledPackageId "old-time-1.1.0.0-3e0f7b48d6c1d1415ad852e23725fdc1",PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}),(InstalledPackageId "primitive-0.5.0.1-a269ac922313cfdb63da08f8624fba7d",PackageIdentifier {pkgName = PackageName "primitive", pkgVersion = Version {versionBranch = [0,5,0,1], versionTags = []}}),(InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8",PackageIdentifier {pkgName = PackageName "stm", pkgVersion = Version {versionBranch = [2,4,2], versionTags = []}}),(InstalledPackageId "syb-0.3.6.1-7e3d2ec5339017845f3db814d70b7bc5",PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,3,6,1], versionTags = []}}),(InstalledPackageId "template-haskell-2.7.0.0-718c7a8346a48b195831957f3dba0eac",PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,7,0,0], versionTags = []}})]},[])], installedPkgs = PackageIndex (fromList [(InstalledPackageId "MonadCatchIO-transformers-0.3.0.0-3d9f2598a492284fcb08e73b1981b4a4",InstalledPackageInfo {installedPackageId = InstalledPackageId "MonadCatchIO-transformers-0.3.0.0-3d9f2598a492284fcb08e73b1981b4a4", sourcePackageId = PackageIdentifier {pkgName = PackageName "MonadCatchIO-transformers", pkgVersion = Version {versionBranch = [0,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "ariep@xs4all.nl", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Monad-transformer compatible version of the Control.Exception module", description = "Provides functions to throw and catch exceptions. Unlike the functions from\n@Control.Exception@, which work in @IO@, these work in any stack of monad\ntransformers (from the 'transformers' package) with @IO@ as the base monad.\nYou can extend this functionality to other monads, by creating an instance\nof the @MonadCatchIO@ class.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","CatchIO"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/MonadCatchIO-transformers-0.3.0.0/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/MonadCatchIO-transformers-0.3.0.0/ghc-7.4.2"], hsLibraries = ["HSMonadCatchIO-transformers-0.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "extensible-exceptions-0.1.1.4-3d9bd197c43329612c640f24179a7f19",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/MonadCatchIO-transformers-0.3.0.0/html/MonadCatchIO-transformers.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/MonadCatchIO-transformers-0.3.0.0/html"]}),(InstalledPackageId "RefSerialize-0.3.1.0-f1d5b4ccd3042e76abd870d718497cf0",InstalledPackageInfo {installedPackageId = InstalledPackageId "RefSerialize-0.3.1.0-f1d5b4ccd3042e76abd870d718497cf0", sourcePackageId = PackageIdentifier {pkgName = PackageName "RefSerialize", pkgVersion = Version {versionBranch = [0,3,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "", homepage = "", pkgUrl = "", synopsis = "Write to and read from ByteStrings maintaining internal memory references", description = "Read, Show and Binary instances do not check for internal data references to the same address.\nAs a result, the data is duplicated when serialized. This is a waste of space in the filesystem\nand  also a waste of serialization time. but the worst consequence is that, when the serialized data is read,\nit allocates multiple copies for the same object when referenced multiple times. Because multiple referenced\ndata is very typical in a pure language such is Haskell, this means that the resulting data loose the beatiful\neconomy of space and processing time that referential transparency permits.\n\nIn this release the default \"(Read a, Show a) => Refserialize a\" has been removed.\n\nSee \"Data.RefSerialize\" for details", category = "Parsing, Data, Database", exposed = True, exposedModules = [ModuleName ["Data","RefSerialize"],ModuleName ["Data","RefSerialize","Parser"],ModuleName ["Data","RefSerialize","Serialize"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/RefSerialize-0.3.1.0"], libraryDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/RefSerialize-0.3.1.0"], hsLibraries = ["HSRefSerialize-0.3.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/RefSerialize-0.3.1.0/html/RefSerialize.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/RefSerialize-0.3.1.0/html"]}),(InstalledPackageId "TCache-0.11.0.0-184e0986ee04b64972952306503ddb2a",InstalledPackageInfo {installedPackageId = InstalledPackageId "TCache-0.11.0.0-184e0986ee04b64972952306503ddb2a", sourcePackageId = PackageIdentifier {pkgName = PackageName "TCache", pkgVersion = Version {versionBranch = [0,11,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "", homepage = "", pkgUrl = "", synopsis = "A Transactional cache with user-defined persistence", description = "TCache is a transactional cache with configurable persitence. It allows conventional\nSTM transactions for objects that syncronize  with their user-defined storages.\nState in memory and into permanent storage is transactionally coherent.\n\nThe package implements serializable STM references, access by key and by record field value, triggers,\nfull text and field indexation, default serialization and a query language based on record fields\n\n0.11.0.0 added setIndexParsist to define persistence for indexes by type. started the addition of readDBRefs, readResources and so on for simultaneous read, writes and deletes of\nobjects of the same type.\n\n0.10.2.0 Added setDefaultPersist and modified the signature of setPersist in Data.TCache.DefaultPersistence.\nFixed issues with ghc 7.6.3\n\n0.10  version add memoization and a persistent and transactional collection/queue.\n\n0.10.0.8 subversion add cachedByKeySTM\n\n0.10.0.9 fixed an error in clearSyncChacheProc and SynWrite Asyncronous that checked the cache continuously\n\nSee \"Data.TCache\" for details\n\nIn this release:\n\nDropped Data.Hashtable (deprecated). Now it uses the package hashtables", category = "Data, Database", exposed = True, exposedModules = [ModuleName ["Data","TCache"],ModuleName ["Data","TCache","DefaultPersistence"],ModuleName ["Data","TCache","Defs"],ModuleName ["Data","TCache","IResource"],ModuleName ["Data","TCache","IndexQuery"],ModuleName ["Data","TCache","IndexText"],ModuleName ["Data","TCache","Memoization"],ModuleName ["Data","TCache","Triggers"],ModuleName ["Data","Persistent","Collection"],ModuleName ["Data","Persistent","IDynamic"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/TCache-0.11.0.0"], libraryDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/TCache-0.11.0.0"], hsLibraries = ["HSTCache-0.11.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "RefSerialize-0.3.1.0-f1d5b4ccd3042e76abd870d718497cf0",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "directory-1.2.0.1-703f5815a12bc673a611f968f42ccaad",InstalledPackageId "hashtables-1.1.2.1-54d9d9d25444aaba39b693b453d0b555",InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56",InstalledPackageId "old-time-1.1.0.0-3e0f7b48d6c1d1415ad852e23725fdc1",InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8",InstalledPackageId "text-0.11.3.1-6cb88d38e009bd49b2a22cdfd8a9f478"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/TCache-0.11.0.0/html/TCache.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/TCache-0.11.0.0/html"]}),(InstalledPackageId "Workflow-0.8.0.8-7c05ea0f35ae7a0e82ade2e476cb7096",InstalledPackageInfo {installedPackageId = InstalledPackageId "Workflow-0.8.0.8-7c05ea0f35ae7a0e82ade2e476cb7096", sourcePackageId = PackageIdentifier {pkgName = PackageName "Workflow", pkgVersion = Version {versionBranch = [0,8,0,8], versionTags = []}}, license = BSD3, copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "experimental", homepage = "", pkgUrl = "", synopsis = "Workflow patterns over a monad for thread state logging & recovery", description = "Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes a\nmonadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations\nor procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication\nfailures, timeouts or shutdowns. It also can be used if you like to restart your\nprogram at the point where the user left it last time\n.             .\nThe computation can be restarted at the interrupted point thanks to its logged state in permanent storage.\nThe thread state is located in files by default. It can be moved and continued in another computer.\nBesides that, the package also provides other higher level services associated to workflows: Workflow patterns,\nand a general configuarion utility, workflow observation events and references to the internal state.\nThe state can be stored maintaining memory references (using the \"RefSerialize\" package), so that it is possible to track the modifications\nof a big structure (for example a document) along the workflow execution.\n\nSee \"Control.Workflow\" for details\n\nIn this release:\n* minor changes", category = "Control, Workflow", exposed = True, exposedModules = [ModuleName ["Control","Workflow"],ModuleName ["Control","Workflow","Configuration"],ModuleName ["Control","Workflow","Patterns"],ModuleName ["Control","Workflow","Stat"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/Workflow-0.8.0.8"], libraryDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/Workflow-0.8.0.8"], hsLibraries = ["HSWorkflow-0.8.0.8"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "MonadCatchIO-transformers-0.3.0.0-3d9f2598a492284fcb08e73b1981b4a4",InstalledPackageId "RefSerialize-0.3.1.0-f1d5b4ccd3042e76abd870d718497cf0",InstalledPackageId "TCache-0.11.0.0-184e0986ee04b64972952306503ddb2a",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "directory-1.2.0.1-703f5815a12bc673a611f968f42ccaad",InstalledPackageId "extensible-exceptions-0.1.1.4-3d9bd197c43329612c640f24179a7f19",InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56",InstalledPackageId "old-time-1.1.0.0-3e0f7b48d6c1d1415ad852e23725fdc1",InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8",InstalledPackageId "vector-0.10.0.1-fdf8e0c3f3c1cae1113ab97c34aa5c14"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/Workflow-0.8.0.8/html/Workflow.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/Workflow-0.8.0.8/html"]}),(InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageInfo {installedPackageId = InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61", sourcePackageId = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,4,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Mutable and immutable arrays", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Safe"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","MArray","Safe"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","ST","Safe"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Storable","Safe"],ModuleName ["Data","Array","Storable","Internals"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array","Unsafe"],ModuleName ["Data","Array"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/array-0.4.0.0"], libraryDirs = ["/usr/lib/ghc/array-0.4.0.0"], hsLibraries = ["HSarray-0.4.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/array-0.4.0.0/array.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/array-0.4.0.0"]}),(InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,5,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Conc"],ModuleName ["GHC","Conc","IO"],ModuleName ["GHC","Conc","Signal"],ModuleName ["GHC","Conc","Sync"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Constants"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Fingerprint"],ModuleName ["GHC","Fingerprint","Type"],ModuleName ["GHC","Float"],ModuleName ["GHC","Float","ConversionUtils"],ModuleName ["GHC","Float","RealFracMethods"],ModuleName ["GHC","Foreign"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IO","Buffer"],ModuleName ["GHC","IO","BufferedIO"],ModuleName ["GHC","IO","Device"],ModuleName ["GHC","IO","Encoding"],ModuleName ["GHC","IO","Encoding","CodePage"],ModuleName ["GHC","IO","Encoding","Failure"],ModuleName ["GHC","IO","Encoding","Iconv"],ModuleName ["GHC","IO","Encoding","Latin1"],ModuleName ["GHC","IO","Encoding","Types"],ModuleName ["GHC","IO","Encoding","UTF16"],ModuleName ["GHC","IO","Encoding","UTF32"],ModuleName ["GHC","IO","Encoding","UTF8"],ModuleName ["GHC","IO","Exception"],ModuleName ["GHC","IO","FD"],ModuleName ["GHC","IO","Handle"],ModuleName ["GHC","IO","Handle","FD"],ModuleName ["GHC","IO","Handle","Internals"],ModuleName ["GHC","IO","Handle","Text"],ModuleName ["GHC","IO","Handle","Types"],ModuleName ["GHC","IO","IOMode"],ModuleName ["GHC","IOArray"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","IORef"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","MVar"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","Stack"],ModuleName ["GHC","Stats"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","STRef"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["GHC","Event"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","OldException"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Safe"],ModuleName ["Control","Monad","ST","Unsafe"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Lazy","Safe"],ModuleName ["Control","Monad","ST","Lazy","Unsafe"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Control","Monad","Zip"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Data"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","Functor"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Typeable","Internal"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","ForeignPtr","Safe"],ModuleName ["Foreign","ForeignPtr","Unsafe"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Safe"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Marshal","Unsafe"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","Safe"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [ModuleName ["GHC","Event","Array"],ModuleName ["GHC","Event","Clock"],ModuleName ["GHC","Event","Control"],ModuleName ["GHC","Event","EPoll"],ModuleName ["GHC","Event","IntMap"],ModuleName ["GHC","Event","Internal"],ModuleName ["GHC","Event","KQueue"],ModuleName ["GHC","Event","Manager"],ModuleName ["GHC","Event","PSQ"],ModuleName ["GHC","Event","Poll"],ModuleName ["GHC","Event","Thread"],ModuleName ["GHC","Event","Unique"],ModuleName ["Control","Monad","ST","Imp"],ModuleName ["Control","Monad","ST","Lazy","Imp"],ModuleName ["Foreign","ForeignPtr","Imp"]], trusted = False, importDirs = ["/usr/lib/ghc/base-4.5.1.0"], libraryDirs = ["/usr/lib/ghc/base-4.5.1.0"], hsLibraries = ["HSbase-4.5.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/lib/ghc/base-4.5.1.0/include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b",InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/base-4.5.1.0/base.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/base-4.5.1.0"]}),(InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageInfo {installedPackageId = InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b", sourcePackageId = PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,6,4,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Lennart Kolmodin, Don Stewart <dons@galois.com>", author = "Lennart Kolmodin <kolmodin@gmail.com>", stability = "provisional", homepage = "https://github.com/kolmodin/binary", pkgUrl = "", synopsis = "Binary serialisation for Haskell values using lazy ByteStrings", description = "Efficient, pure binary serialisation using lazy ByteStrings.\nHaskell values may be encoded to and from binary formats,\nwritten to disk as binary, or sent over the network.\nSerialisation speeds of over 1 G\\/sec have been observed,\nso this library should be suitable for high performance\nscenarios.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Binary"],ModuleName ["Data","Binary","Put"],ModuleName ["Data","Binary","Get"],ModuleName ["Data","Binary","Get","Internal"],ModuleName ["Data","Binary","Builder"],ModuleName ["Data","Binary","Builder","Internal"]], hiddenModules = [ModuleName ["Data","Binary","Generic"],ModuleName ["Data","Binary","Builder","Base"],ModuleName ["Data","Binary","Class"]], trusted = False, importDirs = ["/home/user/.cabal/lib/binary-0.6.4.0/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/binary-0.6.4.0/ghc-7.4.2"], hsLibraries = ["HSbinary-0.6.4.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/binary-0.6.4.0/html/binary.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/binary-0.6.4.0/html"]}),(InstalledPackageId "builtin_rts",InstalledPackageInfo {installedPackageId = InstalledPackageId "builtin_rts", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], trusted = False, importDirs = [], libraryDirs = ["/usr/lib/ghc"], hsLibraries = ["HSrts"], extraLibraries = ["ffi","m","rt","dl"], extraGHCiLibraries = [], includeDirs = ["/usr/lib/ghc/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-u","ghczmprim_GHCziTypes_Izh_static_info","-u","ghczmprim_GHCziTypes_Czh_static_info","-u","ghczmprim_GHCziTypes_Fzh_static_info","-u","ghczmprim_GHCziTypes_Dzh_static_info","-u","base_GHCziPtr_Ptr_static_info","-u","base_GHCziWord_Wzh_static_info","-u","base_GHCziInt_I8zh_static_info","-u","base_GHCziInt_I16zh_static_info","-u","base_GHCziInt_I32zh_static_info","-u","base_GHCziInt_I64zh_static_info","-u","base_GHCziWord_W8zh_static_info","-u","base_GHCziWord_W16zh_static_info","-u","base_GHCziWord_W32zh_static_info","-u","base_GHCziWord_W64zh_static_info","-u","base_GHCziStable_StablePtr_static_info","-u","ghczmprim_GHCziTypes_Izh_con_info","-u","ghczmprim_GHCziTypes_Czh_con_info","-u","ghczmprim_GHCziTypes_Fzh_con_info","-u","ghczmprim_GHCziTypes_Dzh_con_info","-u","base_GHCziPtr_Ptr_con_info","-u","base_GHCziPtr_FunPtr_con_info","-u","base_GHCziStable_StablePtr_con_info","-u","ghczmprim_GHCziTypes_False_closure","-u","ghczmprim_GHCziTypes_True_closure","-u","base_GHCziPack_unpackCString_closure","-u","base_GHCziIOziException_stackOverflow_closure","-u","base_GHCziIOziException_heapOverflow_closure","-u","base_ControlziExceptionziBase_nonTermination_closure","-u","base_GHCziIOziException_blockedIndefinitelyOnMVar_closure","-u","base_GHCziIOziException_blockedIndefinitelyOnSTM_closure","-u","base_ControlziExceptionziBase_nestedAtomically_closure","-u","base_GHCziWeak_runFinalizzerBatch_closure","-u","base_GHCziTopHandler_flushStdHandles_closure","-u","base_GHCziTopHandler_runIO_closure","-u","base_GHCziTopHandler_runNonIO_closure","-u","base_GHCziConcziIO_ensureIOManagerIsRunning_closure","-u","base_GHCziConcziSync_runSparks_closure","-u","base_GHCziConcziSignal_runHandlers_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}),(InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageInfo {installedPackageId = InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1", sourcePackageId = PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,10,4,0], versionTags = []}}, license = BSD3, copyright = "Copyright (c) Don Stewart          2005-2009,\n(c) Duncan Coutts        2006-2013,\n(c) David Roundy         2003-2005,\n(c) Jasper Van der Jeugt 2010,\n(c) Simon Meier          2010-2013.", maintainer = "Don Stewart <dons00@gmail.com>,\nDuncan Coutts <duncan@community.haskell.org>", author = "Don Stewart,\nDuncan Coutts", stability = "", homepage = "https://github.com/haskell/bytestring", pkgUrl = "", synopsis = "Fast, compact, strict and lazy byte strings with a list interface", description = "An efficient compact, immutable byte string type (both strict and lazy)\nsuitable for binary or 8-bit character data.\n\nThe 'ByteString' type represents sequences of bytes or 8-bit characters.\nIt is suitable for high performance use, both in terms of large data\nquantities, or high speed requirements. The 'ByteString' functions follow\nthe same style as Haskell\\'s ordinary lists, so it is easy to convert code\nfrom using 'String' to 'ByteString'.\n\nTwo 'ByteString' variants are provided:\n\n* Strict 'ByteString's keep the string as a single large array. This\nmakes them convenient for passing data between C and Haskell.\n\n* Lazy 'ByteString's use a lazy list of strict chunks which makes it\nsuitable for I\\/O streaming tasks.\n\nThe @Char8@ modules provide a character-based view of the same\nunderlying 'ByteString' types. This makes it convenient to handle mixed\nbinary and 8-bit character content (which is common in many file formats\nand network protocols).\n\nThe 'Builder' module provides an efficient way to build up 'ByteString's\nin an ad-hoc way by repeated concatenation. This is ideal for fast\nserialisation or pretty printing.\n\nThere is also a 'ShortByteString' type which has a lower memory overhead\nand can can be converted to or from a 'ByteString', but supports very few\nother operations. It is suitable for keeping many short strings in memory.\n\n'ByteString's are not designed for Unicode. For Unicode strings you should\nuse the 'Text' type from the @text@ package.\n\nThese modules are intended to be imported qualified, to avoid name clashes\nwith \"Prelude\" functions, e.g.\n\n> import qualified Data.ByteString as BS", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ByteString"],ModuleName ["Data","ByteString","Char8"],ModuleName ["Data","ByteString","Unsafe"],ModuleName ["Data","ByteString","Internal"],ModuleName ["Data","ByteString","Lazy"],ModuleName ["Data","ByteString","Lazy","Char8"],ModuleName ["Data","ByteString","Lazy","Internal"],ModuleName ["Data","ByteString","Short"],ModuleName ["Data","ByteString","Short","Internal"],ModuleName ["Data","ByteString","Builder"],ModuleName ["Data","ByteString","Builder","Extra"],ModuleName ["Data","ByteString","Builder","Prim"],ModuleName ["Data","ByteString","Builder","Internal"],ModuleName ["Data","ByteString","Builder","Prim","Internal"],ModuleName ["Data","ByteString","Lazy","Builder"],ModuleName ["Data","ByteString","Lazy","Builder","Extras"],ModuleName ["Data","ByteString","Lazy","Builder","ASCII"]], hiddenModules = [ModuleName ["Data","ByteString","Builder","ASCII"],ModuleName ["Data","ByteString","Builder","Prim","Binary"],ModuleName ["Data","ByteString","Builder","Prim","ASCII"],ModuleName ["Data","ByteString","Builder","Prim","Internal","Floating"],ModuleName ["Data","ByteString","Builder","Prim","Internal","UncheckedShifts"],ModuleName ["Data","ByteString","Builder","Prim","Internal","Base16"]], trusted = False, importDirs = ["/home/user/.cabal/lib/bytestring-0.10.4.0/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/bytestring-0.10.4.0/ghc-7.4.2"], hsLibraries = ["HSbytestring-0.10.4.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/bytestring-0.10.4.0/ghc-7.4.2/include"], includes = ["fpstring.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/bytestring-0.10.4.0/html/bytestring.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/bytestring-0.10.4.0/html"]}),(InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageInfo {installedPackageId = InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87", sourcePackageId = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,4,2,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "fox@ucw.cz", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Assorted concrete container types", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Graph"],ModuleName ["Data","Sequence"],ModuleName ["Data","Tree"],ModuleName ["Data","IntMap"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Set"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/containers-0.4.2.1"], libraryDirs = ["/usr/lib/ghc/containers-0.4.2.1"], hsLibraries = ["HScontainers-0.4.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/containers-0.4.2.1/containers.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/containers-0.4.2.1"]}),(InstalledPackageId "data-accessor-0.2.2.3-77dcf8c6bef4384c6026111048bdd11d",InstalledPackageInfo {installedPackageId = InstalledPackageId "data-accessor-0.2.2.3-77dcf8c6bef4384c6026111048bdd11d", sourcePackageId = PackageIdentifier {pkgName = PackageName "data-accessor", pkgVersion = Version {versionBranch = [0,2,2,3], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Henning Thielemann <haskell@henning-thielemann.de>", author = "Henning Thielemann <haskell@henning-thielemann.de>, Luke Palmer <lrpalmer@gmail.com>", stability = "", homepage = "http://www.haskell.org/haskellwiki/Record_access", pkgUrl = "", synopsis = "Utilities for accessing and manipulating fields of records", description = "In Haskell 98 the name of a record field\nis automatically also the name of a function which gets the value\nof the according field.\nE.g. if we have\n\ndata Pair a b = Pair\nfirst :: a, second :: b\n\nthen\n\n> first  :: Pair a b -> a\n> second :: Pair a b -> b\n\nHowever for setting or modifying a field value\nwe need to use some syntactic sugar, which is often clumsy.\n\nmodifyFirst :: (a -> a) -> (Pair a b -> Pair a b)\nmodifyFirst f r\\@(Pair\nfirst=a\n) = r\nfirst = f a\n\nWith this package you can define record field accessors\nwhich allow setting, getting and modifying values easily.\nThe package clearly demonstrates the power of the functional approach:\nYou can combine accessors of a record and sub-records,\nto make the access look like the fields of the sub-record belong to the main record.\n\nExample:\n\n> *Data.Accessor.Example> (first^:second^=10) (('b',7),\"hallo\")\n> (('b',10),\"hallo\")\n\nYou can easily manipulate record fields in a 'Control.Monad.State.State' monad,\nyou can easily code 'Show' instances that use the Accessor syntax\nand you can parse binary streams into records.\nSee @Data.Accessor.Example@ for demonstration of all features.\n\nIt would be great if in revised Haskell versions the names of record fields\nare automatically 'Data.Accessor.Accessor's\nrather than plain @get@ functions.\nFor now, the package @data-accessor-template@ provides Template Haskell functions\nfor automated generation of 'Data.Acesssor.Accessor's.\nSee also the other @data-accessor@ packages\nthat provide an Accessor interface to other data types.\nThe package @enumset@ provides accessors to bit-packed records.\n\nFor similar packages see @lenses@ and @fclabel@.\nA related concept are editors\n<http://conal.net/blog/posts/semantic-editor-combinators/>.\nEditors only consist of a modify method\n(and @modify@ applied to a 'const' function is a @set@ function).\nThis way, they can modify all function values of a function at once,\nwhereas an accessor can only change a single function value,\nsay, it can change @f 0 = 1@ to @f 0 = 2@.\nThis way, editors can even change the type of a record or a function.\nAn Arrow instance can be defined for editors,\nbut for accessors only a Category instance is possible ('(.)' method).\nThe reason is the @arr@ method of the @Arrow@ class,\nthat conflicts with the two-way nature (set and get) of accessors.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Accessor"],ModuleName ["Data","Accessor","Basic"],ModuleName ["Data","Accessor","Container"],ModuleName ["Data","Accessor","Show"],ModuleName ["Data","Accessor","Tuple"],ModuleName ["Data","Accessor","BinaryRead"],ModuleName ["Data","Accessor","MonadState"]], hiddenModules = [ModuleName ["Data","Accessor","Example"],ModuleName ["Data","Accessor","Private"],ModuleName ["Data","Accessor","MonadStatePrivate"]], trusted = False, importDirs = ["/home/user/.cabal/lib/data-accessor-0.2.2.3/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/data-accessor-0.2.2.3/ghc-7.4.2"], hsLibraries = ["HSdata-accessor-0.2.2.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/data-accessor-0.2.2.3/html/data-accessor.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/data-accessor-0.2.2.3/html"]}),(InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed",InstalledPackageInfo {installedPackageId = InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed", sourcePackageId = PackageIdentifier {pkgName = PackageName "deepseq", pkgVersion = Version {versionBranch = [1,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Deep evaluation of data structures", description = "This package provides methods for fully evaluating data structures\n(\\\"deep evaluation\\\"). Deep evaluation is often used for adding\nstrictness to a program, e.g. in order to force pending exceptions,\nremove space leaks, or force lazy I/O to happen. It is also useful\nin parallel programs, to ensure pending work does not migrate to the\nwrong thread.\n\nThe primary use of this package is via the 'deepseq' function, a\n\\\"deep\\\" version of 'seq'. It is implemented on top of an 'NFData'\ntypeclass (\\\"Normal Form Data\\\", data structures with no unevaluated\ncomponents) which defines strategies for fully evaluating different\ndata types.\n", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","DeepSeq"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/deepseq-1.3.0.0"], libraryDirs = ["/usr/lib/ghc/deepseq-1.3.0.0"], hsLibraries = ["HSdeepseq-1.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/deepseq-1.3.0.0/deepseq.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/deepseq-1.3.0.0"]}),(InstalledPackageId "directory-1.2.0.1-703f5815a12bc673a611f968f42ccaad",InstalledPackageInfo {installedPackageId = InstalledPackageId "directory-1.2.0.1-703f5815a12bc673a611f968f42ccaad", sourcePackageId = PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,2,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "library for directory handling", description = "This package provides a library for handling directories.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Directory"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/directory-1.2.0.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/directory-1.2.0.1/ghc-7.4.2"], hsLibraries = ["HSdirectory-1.2.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/directory-1.2.0.1/ghc-7.4.2/include"], includes = ["HsDirectory.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "filepath-1.3.0.0-954c43b4f109cbd4121f1231c14d5cff",InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52",InstalledPackageId "unix-2.6.0.1-3234fad0b5a47a931cafe48ceb6885f5"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/directory-1.2.0.1/html/directory.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/directory-1.2.0.1/html"]}),(InstalledPackageId "distributed-process-0.4.2-1facd4e5a0c1f48bb668ad1d68364b80",InstalledPackageInfo {installedPackageId = InstalledPackageId "distributed-process-0.4.2-1facd4e5a0c1f48bb668ad1d68364b80", sourcePackageId = PackageIdentifier {pkgName = PackageName "distributed-process", pkgVersion = Version {versionBranch = [0,4,2], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "watson.timothy@gmail.com, edsko@well-typed.com, duncan@well-typed.com", author = "Duncan Coutts, Nicolas Wu, Edsko de Vries", stability = "experimental", homepage = "http://github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "Cloud Haskell: Erlang-style concurrency in Haskell", description = "This is an implementation of Cloud Haskell, as described in\n/Towards Haskell in the Cloud/ by Jeff Epstein, Andrew Black,\nand Simon Peyton Jones\n(<http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/>),\nalthough some of the details are different. The precise message\npassing semantics are based on /A unified semantics for future Erlang/\nby Hans Svensson, Lars-\197ke Fredlund and Clara Benac Earle.\nYou will probably also want to install a Cloud Haskell backend such\nas distributed-process-simplelocalnet.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Distributed","Process","Internal","Closure","TH"],ModuleName ["Control","Distributed","Process"],ModuleName ["Control","Distributed","Process","Serializable"],ModuleName ["Control","Distributed","Process","Closure"],ModuleName ["Control","Distributed","Process","Node"],ModuleName ["Control","Distributed","Process","Internal","Primitives"],ModuleName ["Control","Distributed","Process","Internal","CQueue"],ModuleName ["Control","Distributed","Process","Internal","Types"],ModuleName ["Control","Distributed","Process","Internal","Trace"],ModuleName ["Control","Distributed","Process","Internal","Closure","BuiltIn"],ModuleName ["Control","Distributed","Process","Internal","Messaging"],ModuleName ["Control","Distributed","Process","Internal","StrictList"],ModuleName ["Control","Distributed","Process","Internal","StrictMVar"],ModuleName ["Control","Distributed","Process","Internal","WeakTQueue"],ModuleName ["Control","Distributed","Process","Internal","StrictContainerAccessors"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/distributed-process-0.4.2/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/distributed-process-0.4.2/ghc-7.4.2"], hsLibraries = ["HSdistributed-process-0.4.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "data-accessor-0.2.2.3-77dcf8c6bef4384c6026111048bdd11d",InstalledPackageId "distributed-static-0.2.1.1-ecdac8346613e3bc60e667cd5116a9c0",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56",InstalledPackageId "network-transport-0.3.0.1-41710340d3a945a886d57381e8ad6563",InstalledPackageId "old-locale-1.0.0.4-b1d945ebea59a524cba400a524cb40aa",InstalledPackageId "random-1.0.1.1-5bcf17e975ad42d3244dd9f6f76c56ce",InstalledPackageId "rank1dynamic-0.1.0.2-1405d177a2b2ff21e91f6132e427d1d6",InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8",InstalledPackageId "syb-0.3.6.1-7e3d2ec5339017845f3db814d70b7bc5",InstalledPackageId "template-haskell-2.7.0.0-718c7a8346a48b195831957f3dba0eac",InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/distributed-process-0.4.2/html/distributed-process.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/distributed-process-0.4.2/html"]}),(InstalledPackageId "distributed-process-simplelocalnet-0.2.0.9-f624f098d90b78653c4e3f36c8512029",InstalledPackageInfo {installedPackageId = InstalledPackageId "distributed-process-simplelocalnet-0.2.0.9-f624f098d90b78653c4e3f36c8512029", sourcePackageId = PackageIdentifier {pkgName = PackageName "distributed-process-simplelocalnet", pkgVersion = Version {versionBranch = [0,2,0,9], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "watson.timothy@gmail.com, edsko@well-typed.com, duncan@well-typed.com", author = "Duncan Coutts, Nicolas Wu, Edsko de Vries", stability = "experimental", homepage = "http://github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "Simple zero-configuration backend for Cloud Haskell", description = "Simple backend based on the TCP transport which offers node\ndiscovery based on UDP multicast. This is a zero-configuration\nbackend designed to get you going with Cloud Haskell quickly\nwithout imposing any structure on your application.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Distributed","Process","Backend","SimpleLocalnet"],ModuleName ["Control","Distributed","Process","Backend","SimpleLocalnet","Internal","Multicast"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/distributed-process-simplelocalnet-0.2.0.9/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/distributed-process-simplelocalnet-0.2.0.9/ghc-7.4.2"], hsLibraries = ["HSdistributed-process-simplelocalnet-0.2.0.9"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "data-accessor-0.2.2.3-77dcf8c6bef4384c6026111048bdd11d",InstalledPackageId "distributed-process-0.4.2-1facd4e5a0c1f48bb668ad1d68364b80",InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f",InstalledPackageId "network-multicast-0.0.10-13b11fc14bfffd94b4a080772634d41c",InstalledPackageId "network-transport-0.3.0.1-41710340d3a945a886d57381e8ad6563",InstalledPackageId "network-transport-tcp-0.3.1-458e2b8d81cd675be9f64ae0bfadb686",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/distributed-process-simplelocalnet-0.2.0.9/html/distributed-process-simplelocalnet.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/distributed-process-simplelocalnet-0.2.0.9/html"]}),(InstalledPackageId "distributed-static-0.2.1.1-ecdac8346613e3bc60e667cd5116a9c0",InstalledPackageInfo {installedPackageId = InstalledPackageId "distributed-static-0.2.1.1-ecdac8346613e3bc60e667cd5116a9c0", sourcePackageId = PackageIdentifier {pkgName = PackageName "distributed-static", pkgVersion = Version {versionBranch = [0,2,1,1], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "edsko@well-typed.com", author = "Edsko de Vries", stability = "", homepage = "http://www.github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "Compositional, type-safe, polymorphic static values and closures", description = "/Towards Haskell in the Cloud/ (Epstein et al, Haskell\nSymposium 2011) introduces the concept of /static/ values:\nvalues that are known at compile time. In a distributed\nsetting where all nodes are running the same executable,\nstatic values can be serialized simply by transmitting a\ncode pointer to the value. This however requires special\ncompiler support, which is not yet available in ghc. We\ncan mimick the behaviour by keeping an explicit mapping\n('RemoteTable') from labels to values (and making sure\nthat all distributed nodes are using the same\n'RemoteTable'). In this module we implement this mimickry\nand various extensions: type safety (including for\npolymorphic static values) and compositionality.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Distributed","Static"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/distributed-static-0.2.1.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/distributed-static-0.2.1.1/ghc-7.4.2"], hsLibraries = ["HSdistributed-static-0.2.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "rank1dynamic-0.1.0.2-1405d177a2b2ff21e91f6132e427d1d6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/distributed-static-0.2.1.1/html/distributed-static.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/distributed-static-0.2.1.1/html"]}),(InstalledPackageId "extensible-exceptions-0.1.1.4-3d9bd197c43329612c640f24179a7f19",InstalledPackageInfo {installedPackageId = InstalledPackageId "extensible-exceptions-0.1.1.4-3d9bd197c43329612c640f24179a7f19", sourcePackageId = PackageIdentifier {pkgName = PackageName "extensible-exceptions", pkgVersion = Version {versionBranch = [0,1,1,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Extensible exceptions", description = "This package provides extensible exceptions for both new and\nold versions of GHC (i.e., < 6.10).", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Exception","Extensible"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/extensible-exceptions-0.1.1.4"], libraryDirs = ["/usr/lib/ghc/extensible-exceptions-0.1.1.4"], hsLibraries = ["HSextensible-exceptions-0.1.1.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/extensible-exceptions-0.1.1.4/extensible-exceptions.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/extensible-exceptions-0.1.1.4"]}),(InstalledPackageId "filepath-1.3.0.0-954c43b4f109cbd4121f1231c14d5cff",InstalledPackageInfo {installedPackageId = InstalledPackageId "filepath-1.3.0.0-954c43b4f109cbd4121f1231c14d5cff", sourcePackageId = PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "", author = "Neil Mitchell", stability = "", homepage = "http://www-users.cs.york.ac.uk/~ndm/filepath/", pkgUrl = "", synopsis = "Library for manipulating FilePaths in a cross platform way.", description = "", category = "System", exposed = True, exposedModules = [ModuleName ["System","FilePath"],ModuleName ["System","FilePath","Posix"],ModuleName ["System","FilePath","Windows"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/filepath-1.3.0.0"], libraryDirs = ["/usr/lib/ghc/filepath-1.3.0.0"], hsLibraries = ["HSfilepath-1.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/filepath-1.3.0.0/filepath.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/filepath-1.3.0.0"]}),(InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Prim"],ModuleName ["GHC","Classes"],ModuleName ["GHC","CString"],ModuleName ["GHC","Debug"],ModuleName ["GHC","Generics"],ModuleName ["GHC","Magic"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/ghc-prim-0.2.0.0"], libraryDirs = ["/usr/lib/ghc/ghc-prim-0.2.0.0"], hsLibraries = ["HSghc-prim-0.2.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/ghc-prim-0.2.0.0/ghc-prim.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/ghc-prim-0.2.0.0"]}),(InstalledPackageId "hashable-1.2.1.0-4509f214e8f1b5778782a0f03a83ea86",InstalledPackageInfo {installedPackageId = InstalledPackageId "hashable-1.2.1.0-4509f214e8f1b5778782a0f03a83ea86", sourcePackageId = PackageIdentifier {pkgName = PackageName "hashable", pkgVersion = Version {versionBranch = [1,2,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "johan.tibell@gmail.com", author = "Milan Straka <fox@ucw.cz>\nJohan Tibell <johan.tibell@gmail.com>", stability = "Provisional", homepage = "http://github.com/tibbe/hashable", pkgUrl = "", synopsis = "A class for types that can be converted to a hash value", description = "This package defines a class, 'Hashable', for types that\ncan be converted to a hash value.  This class\nexists for the benefit of hashing-based data\nstructures.  The package provides instances for\nbasic types and a way to combine hash values.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Hashable"]], hiddenModules = [ModuleName ["Data","Hashable","Generic"],ModuleName ["Data","Hashable","Class"]], trusted = False, importDirs = ["/home/user/.cabal/lib/hashable-1.2.1.0/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/hashable-1.2.1.0/ghc-7.4.2"], hsLibraries = ["HShashable-1.2.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b",InstalledPackageId "text-0.11.3.1-6cb88d38e009bd49b2a22cdfd8a9f478"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/hashable-1.2.1.0/html/hashable.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/hashable-1.2.1.0/html"]}),(InstalledPackageId "hashtables-1.1.2.1-54d9d9d25444aaba39b693b453d0b555",InstalledPackageInfo {installedPackageId = InstalledPackageId "hashtables-1.1.2.1-54d9d9d25444aaba39b693b453d0b555", sourcePackageId = PackageIdentifier {pkgName = PackageName "hashtables", pkgVersion = Version {versionBranch = [1,1,2,1], versionTags = []}}, license = BSD3, copyright = "(c) 2011-2013, Google, Inc.", maintainer = "greg@gregorycollins.net", author = "Gregory Collins", stability = "", homepage = "http://github.com/gregorycollins/hashtables", pkgUrl = "", synopsis = "Mutable hash tables in the ST monad", description = "This package provides a couple of different implementations of mutable hash\ntables in the ST monad, as well as a typeclass abstracting their common\noperations, and a set of wrappers to use the hash tables in the IO monad.\n\n/QUICK START/: documentation for the hash table operations is provided in the\n\"Data.HashTable.Class\" module, and the IO wrappers (which most users will\nprobably prefer) are located in the \"Data.HashTable.IO\" module.\n\nThis package currently contains three hash table implementations:\n\n1. \"Data.HashTable.ST.Basic\" contains a basic open-addressing hash table\nusing linear probing as the collision strategy. On a pure speed basis it\nshould currently be the fastest available Haskell hash table\nimplementation for lookups, although it has a higher memory overhead\nthan the other tables and can suffer from long delays when the table is\nresized because all of the elements in the table need to be rehashed.\n\n2. \"Data.HashTable.ST.Cuckoo\" contains an implementation of \\\"cuckoo\nhashing\\\" as introduced by Pagh and Rodler in 2001 (see\n<http://en.wikipedia.org/wiki/Cuckoo_hashing>). Cuckoo hashing has\nworst-case /O(1)/ lookups and can reach a high \\\"load factor\\\", in which\nthe table can perform acceptably well even when more than 90% full.\nRandomized testing shows this implementation of cuckoo hashing to be\nslightly faster on insert and slightly slower on lookup than\n\"Data.Hashtable.ST.Basic\", while being more space efficient by about a\nhalf-word per key-value mapping. Cuckoo hashing, like the basic hash\ntable implementation using linear probing, can suffer from long delays\nwhen the table is resized.\n\n3. \"Data.HashTable.ST.Linear\" contains a linear hash table (see\n<http://en.wikipedia.org/wiki/Linear_hashing>), which trades some insert\nand lookup performance for higher space efficiency and much shorter\ndelays when expanding the table. In most cases, benchmarks show this\ntable to be currently slightly faster than @Data.HashTable@ from the\nHaskell base library.\n\nIt is recommended to create a concrete type alias in your code when using this\npackage, i.e.:\n\n> import qualified Data.HashTable.IO as H\n>\n> type HashTable k v = H.BasicHashTable k v\n>\n> foo :: IO (HashTable Int Int)\n> foo = do\n>     ht <- H.new\n>     H.insert ht 1 1\n>     return ht\n\nFirstly, this makes it easy to switch to a different hash table implementation,\nand secondly, using a concrete type rather than leaving your functions abstract\nin the HashTable class should allow GHC to optimize away the typeclass\ndictionaries.\n\nThis package accepts a couple of different cabal flags:\n\n* @unsafe-tricks@, default /ON/. If this flag is enabled, we use some\nunsafe GHC-specific tricks to save indirections (namely @unsafeCoerce#@\nand @reallyUnsafePtrEquality#@. These techniques rely on assumptions\nabout the behaviour of the GHC runtime system and, although they've been\ntested and should be safe under normal conditions, are slightly\ndangerous. Caveat emptor. In particular, these techniques are\nincompatible with HPC code coverage reports.\n\n* @sse41@, default /OFF/. If this flag is enabled, we use some SSE 4.1\ninstructions (see <http://en.wikipedia.org/wiki/SSE4>, first available on\nIntel Core 2 processors) to speed up cache-line searches for cuckoo\nhashing.\n\n* @bounds-checking@, default /OFF/. If this flag is enabled, array accesses\nare bounds-checked.\n\n* @debug@, default /OFF/. If turned on, we'll rudely spew debug output to\nstdout.\n\n* @portable@, default /OFF/. If this flag is enabled, we use only pure\nHaskell code and try not to use unportable GHC extensions. Turning this\nflag on forces @unsafe-tricks@ and @sse41@ /OFF/.\n\nThis package has been tested with GHC 7.0.3, on:\n\n* a MacBook Pro running Snow Leopard with an Intel Core i5 processor,\nrunning GHC 7.0.3 in 64-bit mode.\n\n* an Arch Linux desktop with an AMD Phenom II X4 940 quad-core processor.\n\n* a MacBook Pro running Snow Leopard with an Intel Core 2 Duo processor,\nrunning GHC 6.12.3 in 32-bit mode.\n\nPlease send bug reports to\n<https://github.com/gregorycollins/hashtables/issues>.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","HashTable","Class"],ModuleName ["Data","HashTable","IO"],ModuleName ["Data","HashTable","ST","Basic"],ModuleName ["Data","HashTable","ST","Cuckoo"],ModuleName ["Data","HashTable","ST","Linear"]], hiddenModules = [ModuleName ["Data","HashTable","Internal","Array"],ModuleName ["Data","HashTable","Internal","IntArray"],ModuleName ["Data","HashTable","Internal","CacheLine"],ModuleName ["Data","HashTable","Internal","CheapPseudoRandomBitStream"],ModuleName ["Data","HashTable","Internal","UnsafeTricks"],ModuleName ["Data","HashTable","Internal","Utils"],ModuleName ["Data","HashTable","Internal","Linear","Bucket"]], trusted = False, importDirs = ["/home/user/.cabal/lib/hashtables-1.1.2.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/hashtables-1.1.2.1/ghc-7.4.2"], hsLibraries = ["HShashtables-1.1.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "hashable-1.2.1.0-4509f214e8f1b5778782a0f03a83ea86",InstalledPackageId "primitive-0.5.0.1-a269ac922313cfdb63da08f8624fba7d",InstalledPackageId "vector-0.10.0.1-fdf8e0c3f3c1cae1113ab97c34aa5c14"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/hashtables-1.1.2.1/html/hashtables.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/hashtables-1.1.2.1/html"]}),(InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b",InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-gmp", pkgVersion = Version {versionBranch = [0,4,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Integer library based on GMP", description = "This package contains an Integer library based on GMP.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","GMP","Internals"],ModuleName ["GHC","Integer","GMP","Prim"],ModuleName ["GHC","Integer","Logarithms"],ModuleName ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [ModuleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["/usr/lib/ghc/integer-gmp-0.4.0.0"], libraryDirs = ["/usr/lib/ghc/integer-gmp-0.4.0.0"], hsLibraries = ["HSinteger-gmp-0.4.0.0"], extraLibraries = ["gmp"], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/integer-gmp-0.4.0.0/integer-gmp.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/integer-gmp-0.4.0.0"]}),(InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56",InstalledPackageInfo {installedPackageId = InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56", sourcePackageId = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,1,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Edward Kmett <ekmett@gmail.com>", author = "Andy Gill", stability = "", homepage = "", pkgUrl = "", synopsis = "Monad classes, using functional dependencies", description = "Monad classes using functional dependencies, with instances\nfor various monad transformers, inspired by the paper\n/Functional Programming with Overloading and Higher-Order Polymorphism/,\nby Mark P Jones, in /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Cont"],ModuleName ["Control","Monad","Cont","Class"],ModuleName ["Control","Monad","Error"],ModuleName ["Control","Monad","Error","Class"],ModuleName ["Control","Monad","Identity"],ModuleName ["Control","Monad","List"],ModuleName ["Control","Monad","RWS"],ModuleName ["Control","Monad","RWS","Class"],ModuleName ["Control","Monad","RWS","Lazy"],ModuleName ["Control","Monad","RWS","Strict"],ModuleName ["Control","Monad","Reader"],ModuleName ["Control","Monad","Reader","Class"],ModuleName ["Control","Monad","State"],ModuleName ["Control","Monad","State","Class"],ModuleName ["Control","Monad","State","Lazy"],ModuleName ["Control","Monad","State","Strict"],ModuleName ["Control","Monad","Trans"],ModuleName ["Control","Monad","Writer"],ModuleName ["Control","Monad","Writer","Class"],ModuleName ["Control","Monad","Writer","Lazy"],ModuleName ["Control","Monad","Writer","Strict"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/haskell-packages/ghc/lib/mtl-2.1.1/ghc-7.4.2"], libraryDirs = ["/usr/lib/haskell-packages/ghc/lib/mtl-2.1.1/ghc-7.4.2"], hsLibraries = ["HSmtl-2.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/mtl-2.1.1/mtl.haddock"], haddockHTMLs = ["/usr/share/doc/libghc-mtl-doc/html/"]}),(InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f",InstalledPackageInfo {installedPackageId = InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f", sourcePackageId = PackageIdentifier {pkgName = PackageName "network", pkgVersion = Version {versionBranch = [2,4,2,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Johan Tibell <johan.tibell@gmail.com>", author = "", stability = "", homepage = "https://github.com/haskell/network", pkgUrl = "", synopsis = "Low-level networking interface", description = "Low-level networking interface", category = "Network", exposed = True, exposedModules = [ModuleName ["Network"],ModuleName ["Network","BSD"],ModuleName ["Network","Socket"],ModuleName ["Network","Socket","ByteString"],ModuleName ["Network","Socket","ByteString","Lazy"],ModuleName ["Network","Socket","Internal"],ModuleName ["Network","URI"]], hiddenModules = [ModuleName ["Network","Socket","ByteString","IOVec"],ModuleName ["Network","Socket","ByteString","MsgHdr"],ModuleName ["Network","Socket","ByteString","Internal"],ModuleName ["Network","Socket","Types"]], trusted = False, importDirs = ["/home/user/.cabal/lib/network-2.4.2.0/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/network-2.4.2.0/ghc-7.4.2"], hsLibraries = ["HSnetwork-2.4.2.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/network-2.4.2.0/ghc-7.4.2/include"], includes = ["HsNet.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "parsec-3.1.3-ac6f0113417a57f9a9728e827832641d",InstalledPackageId "unix-2.6.0.1-3234fad0b5a47a931cafe48ceb6885f5"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/network-2.4.2.0/html/network.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/network-2.4.2.0/html"]}),(InstalledPackageId "network-multicast-0.0.10-13b11fc14bfffd94b4a080772634d41c",InstalledPackageInfo {installedPackageId = InstalledPackageId "network-multicast-0.0.10-13b11fc14bfffd94b4a080772634d41c", sourcePackageId = PackageIdentifier {pkgName = PackageName "network-multicast", pkgVersion = Version {versionBranch = [0,0,10], versionTags = []}}, license = PublicDomain, copyright = "2008-2013 Audrey Tang", maintainer = "Audrey Tang <audreyt@audreyt.org>", author = "Audrey Tang <audreyt@audreyt.org>", stability = "experimental", homepage = "", pkgUrl = "", synopsis = "Simple multicast library", description = "The \"Network.Multicast\" module is for sending\nUDP datagrams over multicast (class D) addresses.", category = "Network", exposed = True, exposedModules = [ModuleName ["Network","Multicast"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/network-multicast-0.0.10/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/network-multicast-0.0.10/ghc-7.4.2"], hsLibraries = ["HSnetwork-multicast-0.0.10"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/network-multicast-0.0.10/html/network-multicast.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/network-multicast-0.0.10/html"]}),(InstalledPackageId "network-transport-0.3.0.1-41710340d3a945a886d57381e8ad6563",InstalledPackageInfo {installedPackageId = InstalledPackageId "network-transport-0.3.0.1-41710340d3a945a886d57381e8ad6563", sourcePackageId = PackageIdentifier {pkgName = PackageName "network-transport", pkgVersion = Version {versionBranch = [0,3,0,1], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "edsko@well-typed.com, duncan@well-typed.com", author = "Duncan Coutts, Nicolas Wu, Edsko de Vries", stability = "experimental", homepage = "http://github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "Network abstraction layer", description = "\"Network.Transport\" is a Network Abstraction Layer which provides\nthe following high-level concepts:\n\n* Nodes in the network are represented by 'EndPoint's. These are\nheavyweight stateful objects.\n\n* Each 'EndPoint' has an 'EndPointAddress'.\n\n* Connections can be established from one 'EndPoint' to another\nusing the 'EndPointAddress' of the remote end.\n\n* The 'EndPointAddress' can be serialised and sent over the\nnetwork, where as 'EndPoint's and connections cannot.\n\n* Connections between 'EndPoint's are unidirectional and lightweight.\n\n* Outgoing messages are sent via a 'Connection' object that\nrepresents the sending end of the connection.\n\n* Incoming messages for /all/ of the incoming connections on\nan 'EndPoint' are collected via a shared receive queue.\n\n* In addition to incoming messages, 'EndPoint's are notified of\nother 'Event's such as new connections or broken connections.\n\nThis design was heavily influenced by the design of the Common\nCommunication Interface\n(<http://www.olcf.ornl.gov/center-projects/common-communication-interface>).\nImportant design goals are:\n\n* Connections should be lightweight: it should be no problem to\ncreate thousands of connections between endpoints.\n\n* Error handling is explicit: every function declares as part of\nits type which errors it can return (no exceptions are thrown)\n\n* Error handling is \"abstract\": errors that originate from\nimplementation specific problems (such as \"no more sockets\" in\nthe TCP implementation) get mapped to generic errors\n(\"insufficient resources\") at the Transport level.\n\nThis package provides the generic interface only; you will\nprobably also want to install at least one transport\nimplementation (network-transport-*).", category = "Network", exposed = True, exposedModules = [ModuleName ["Network","Transport"],ModuleName ["Network","Transport","Util"],ModuleName ["Network","Transport","Internal"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/network-transport-0.3.0.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/network-transport-0.3.0.1/ghc-7.4.2"], hsLibraries = ["HSnetwork-transport-0.3.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/network-transport-0.3.0.1/html/network-transport.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/network-transport-0.3.0.1/html"]}),(InstalledPackageId "network-transport-tcp-0.3.1-458e2b8d81cd675be9f64ae0bfadb686",InstalledPackageInfo {installedPackageId = InstalledPackageId "network-transport-tcp-0.3.1-458e2b8d81cd675be9f64ae0bfadb686", sourcePackageId = PackageIdentifier {pkgName = PackageName "network-transport-tcp", pkgVersion = Version {versionBranch = [0,3,1], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "edsko@well-typed.com, dcoutts@well-typed.com", author = "Duncan Coutts, Nicolas Wu, Edsko de Vries", stability = "experimental", homepage = "http://github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "TCP instantiation of Network.Transport", description = "TCP instantiation of Network.Transport", category = "Network", exposed = True, exposedModules = [ModuleName ["Network","Transport","TCP"],ModuleName ["Network","Transport","TCP","Internal"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/network-transport-tcp-0.3.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/network-transport-tcp-0.3.1/ghc-7.4.2"], hsLibraries = ["HSnetwork-transport-tcp-0.3.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "data-accessor-0.2.2.3-77dcf8c6bef4384c6026111048bdd11d",InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f",InstalledPackageId "network-transport-0.3.0.1-41710340d3a945a886d57381e8ad6563"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/network-transport-tcp-0.3.1/html/network-transport-tcp.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/network-transport-tcp-0.3.1/html"]}),(InstalledPackageId "old-locale-1.0.0.4-b1d945ebea59a524cba400a524cb40aa",InstalledPackageInfo {installedPackageId = InstalledPackageId "old-locale-1.0.0.4-b1d945ebea59a524cba400a524cb40aa", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "locale library", description = "This package provides the old locale library.\nFor new code, the new locale library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Locale"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/old-locale-1.0.0.4"], libraryDirs = ["/usr/lib/ghc/old-locale-1.0.0.4"], hsLibraries = ["HSold-locale-1.0.0.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/old-locale-1.0.0.4/old-locale.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/old-locale-1.0.0.4"]}),(InstalledPackageId "old-time-1.1.0.0-3e0f7b48d6c1d1415ad852e23725fdc1",InstalledPackageInfo {installedPackageId = InstalledPackageId "old-time-1.1.0.0-3e0f7b48d6c1d1415ad852e23725fdc1", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Time library", description = "This package provides the old time library.\nFor new code, the new time library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Time"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/old-time-1.1.0.0"], libraryDirs = ["/usr/lib/ghc/old-time-1.1.0.0"], hsLibraries = ["HSold-time-1.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/lib/ghc/old-time-1.1.0.0/include"], includes = ["HsTime.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "old-locale-1.0.0.4-b1d945ebea59a524cba400a524cb40aa"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/old-time-1.1.0.0/old-time.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/old-time-1.1.0.0"]}),(InstalledPackageId "parsec-3.1.3-ac6f0113417a57f9a9728e827832641d",InstalledPackageInfo {installedPackageId = InstalledPackageId "parsec-3.1.3-ac6f0113417a57f9a9728e827832641d", sourcePackageId = PackageIdentifier {pkgName = PackageName "parsec", pkgVersion = Version {versionBranch = [3,1,3], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Antoine Latter <aslatter@gmail.com>", author = "Daan Leijen <daan@microsoft.com>, Paolo Martini <paolo@nemail.it>", stability = "", homepage = "http://www.cs.uu.nl/~daan/parsec.html", pkgUrl = "", synopsis = "Monadic parser combinators", description = "Parsec is designed from scratch as an industrial-strength parser\nlibrary.  It is simple, safe, well documented (on the package\nhomepage), has extensive libraries and good error messages,\nand is also fast.  It is defined as a monad transformer that can be\nstacked on arbitrary monads, and it is also parametric in the\ninput stream type.", category = "Parsing", exposed = True, exposedModules = [ModuleName ["Text","Parsec"],ModuleName ["Text","Parsec","String"],ModuleName ["Text","Parsec","ByteString"],ModuleName ["Text","Parsec","ByteString","Lazy"],ModuleName ["Text","Parsec","Text"],ModuleName ["Text","Parsec","Text","Lazy"],ModuleName ["Text","Parsec","Pos"],ModuleName ["Text","Parsec","Error"],ModuleName ["Text","Parsec","Prim"],ModuleName ["Text","Parsec","Char"],ModuleName ["Text","Parsec","Combinator"],ModuleName ["Text","Parsec","Token"],ModuleName ["Text","Parsec","Expr"],ModuleName ["Text","Parsec","Language"],ModuleName ["Text","Parsec","Perm"],ModuleName ["Text","ParserCombinators","Parsec"],ModuleName ["Text","ParserCombinators","Parsec","Char"],ModuleName ["Text","ParserCombinators","Parsec","Combinator"],ModuleName ["Text","ParserCombinators","Parsec","Error"],ModuleName ["Text","ParserCombinators","Parsec","Expr"],ModuleName ["Text","ParserCombinators","Parsec","Language"],ModuleName ["Text","ParserCombinators","Parsec","Perm"],ModuleName ["Text","ParserCombinators","Parsec","Pos"],ModuleName ["Text","ParserCombinators","Parsec","Prim"],ModuleName ["Text","ParserCombinators","Parsec","Token"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/parsec-3.1.3/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/parsec-3.1.3/ghc-7.4.2"], hsLibraries = ["HSparsec-3.1.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56",InstalledPackageId "text-0.11.3.1-6cb88d38e009bd49b2a22cdfd8a9f478"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/parsec-3.1.3/html/parsec.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/parsec-3.1.3/html"]}),(InstalledPackageId "pretty-1.1.1.0-867dcdeb02592f3d2a707618561c7b86",InstalledPackageInfo {installedPackageId = InstalledPackageId "pretty-1.1.1.0-867dcdeb02592f3d2a707618561c7b86", sourcePackageId = PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,1,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "David Terei <dave.terei@gmail.com>", author = "", stability = "Stable", homepage = "http://github.com/haskell/pretty", pkgUrl = "", synopsis = "Pretty-printing library", description = "This package contains a pretty-printing library, a set of API's\nthat provides a way to easily print out text in a consistent\nformat of your choosing. This is useful for compilers and related\ntools.\n\nThis library was originally designed by John Hughes's and has since\nbeen heavily modified by Simon Peyton Jones.", category = "Text", exposed = True, exposedModules = [ModuleName ["Text","PrettyPrint"],ModuleName ["Text","PrettyPrint","HughesPJ"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/pretty-1.1.1.0"], libraryDirs = ["/usr/lib/ghc/pretty-1.1.1.0"], hsLibraries = ["HSpretty-1.1.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/pretty-1.1.1.0/pretty.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/pretty-1.1.1.0"]}),(InstalledPackageId "primitive-0.5.0.1-a269ac922313cfdb63da08f8624fba7d",InstalledPackageInfo {installedPackageId = InstalledPackageId "primitive-0.5.0.1-a269ac922313cfdb63da08f8624fba7d", sourcePackageId = PackageIdentifier {pkgName = PackageName "primitive", pkgVersion = Version {versionBranch = [0,5,0,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2009-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "http://code.haskell.org/primitive", pkgUrl = "", synopsis = "Primitive memory-related operations", description = "\nThis package provides various primitive memory-related operations.\n\nChanges in version 0.5.0.1\n\n* Disable array copying primitives for GHC 7.6.* and earlier\n\nChanges in version 0.5\n\n* New in \"Data.Primitive.MutVar\": @atomicModifyMutVar@\n\n* Efficient block fill operations: @setByteArray@, @setAddr@\n", category = "Data", exposed = True, exposedModules = [ModuleName ["Control","Monad","Primitive"],ModuleName ["Data","Primitive"],ModuleName ["Data","Primitive","MachDeps"],ModuleName ["Data","Primitive","Types"],ModuleName ["Data","Primitive","Array"],ModuleName ["Data","Primitive","ByteArray"],ModuleName ["Data","Primitive","Addr"],ModuleName ["Data","Primitive","MutVar"]], hiddenModules = [ModuleName ["Data","Primitive","Internal","Compat"],ModuleName ["Data","Primitive","Internal","Operations"]], trusted = False, importDirs = ["/home/user/.cabal/lib/primitive-0.5.0.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/primitive-0.5.0.1/ghc-7.4.2"], hsLibraries = ["HSprimitive-0.5.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/primitive-0.5.0.1/ghc-7.4.2/include"], includes = ["primitive-memops.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/primitive-0.5.0.1/html/primitive.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/primitive-0.5.0.1/html"]}),(InstalledPackageId "random-1.0.1.1-5bcf17e975ad42d3244dd9f6f76c56ce",InstalledPackageInfo {installedPackageId = InstalledPackageId "random-1.0.1.1-5bcf17e975ad42d3244dd9f6f76c56ce", sourcePackageId = PackageIdentifier {pkgName = PackageName "random", pkgVersion = Version {versionBranch = [1,0,1,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "rrnewton@gmail.com", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "random number library", description = "This package provides a basic random number generation\nlibrary, including the ability to split random number\ngenerators.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Random"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/haskell-packages/ghc/lib/random-1.0.1.1/ghc-7.4.2"], libraryDirs = ["/usr/lib/haskell-packages/ghc/lib/random-1.0.1.1/ghc-7.4.2"], hsLibraries = ["HSrandom-1.0.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/random-1.0.1.1/random.haddock"], haddockHTMLs = ["/usr/share/doc/libghc-random-doc/html/"]}),(InstalledPackageId "rank1dynamic-0.1.0.2-1405d177a2b2ff21e91f6132e427d1d6",InstalledPackageInfo {installedPackageId = InstalledPackageId "rank1dynamic-0.1.0.2-1405d177a2b2ff21e91f6132e427d1d6", sourcePackageId = PackageIdentifier {pkgName = PackageName "rank1dynamic", pkgVersion = Version {versionBranch = [0,1,0,2], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "edsko@well-typed.com", author = "Edsko de Vries", stability = "", homepage = "http://github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types", description = "\"Data.Typeable\" and \"Data.Dynamic\" only support monomorphic types.\nIn this package we provide similar functionality but with\nsupport for rank-1 polymorphic types.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Rank1Dynamic"],ModuleName ["Data","Rank1Typeable"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/rank1dynamic-0.1.0.2/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/rank1dynamic-0.1.0.2/ghc-7.4.2"], hsLibraries = ["HSrank1dynamic-0.1.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/rank1dynamic-0.1.0.2/html/rank1dynamic.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/rank1dynamic-0.1.0.2/html"]}),(InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8",InstalledPackageInfo {installedPackageId = InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8", sourcePackageId = PackageIdentifier {pkgName = PackageName "stm", pkgVersion = Version {versionBranch = [2,4,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Software Transactional Memory", description = "A modular composable concurrency abstraction.\n\nChanges in version 2.4.2\n\n* Added \"Control.Concurrent.STM.TSem\" (transactional semaphore)\n\nChanges in version 2.4.1\n\n* Added Applicative/Alternative instances of STM for GHC <7.0\n\nChanges in version 2.4\n\n* Added \"Control.Concurrent.STM.TQueue\" (a faster @TChan@)\n\n* Added \"Control.Concurrent.STM.TBQueue\" (a bounded channel based on @TQueue@)\n\n* @TChan@ has an @Eq@ instances\n\n* Added @newBroadcastTChan@ and @newBroadcastTChanIO@\n\n* Some performance improvements for @TChan@\n\n* Added @cloneTChan@", category = "Concurrency", exposed = True, exposedModules = [ModuleName ["Control","Concurrent","STM"],ModuleName ["Control","Concurrent","STM","TArray"],ModuleName ["Control","Concurrent","STM","TVar"],ModuleName ["Control","Concurrent","STM","TChan"],ModuleName ["Control","Concurrent","STM","TMVar"],ModuleName ["Control","Concurrent","STM","TQueue"],ModuleName ["Control","Concurrent","STM","TBQueue"],ModuleName ["Control","Concurrent","STM","TSem"],ModuleName ["Control","Monad","STM"]], hiddenModules = [ModuleName ["Control","Sequential","STM"]], trusted = False, importDirs = ["/home/user/.cabal/lib/stm-2.4.2/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/stm-2.4.2/ghc-7.4.2"], hsLibraries = ["HSstm-2.4.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/stm-2.4.2/html/stm.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/stm-2.4.2/html"]}),(InstalledPackageId "syb-0.3.6.1-7e3d2ec5339017845f3db814d70b7bc5",InstalledPackageInfo {installedPackageId = InstalledPackageId "syb-0.3.6.1-7e3d2ec5339017845f3db814d70b7bc5", sourcePackageId = PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,3,6,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "generics@haskell.org", author = "Ralf Lammel, Simon Peyton Jones, Jose Pedro Magalhaes", stability = "provisional", homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB", pkgUrl = "", synopsis = "Scrap Your Boilerplate", description = "This package contains the generics system described in the\n/Scrap Your Boilerplate/ papers (see\n<http://www.cs.uu.nl/wiki/GenericProgramming/SYB>).\nIt defines the @Data@ class of types permitting folding and unfolding\nof constructor applications, instances of this class for primitive\ntypes, and a variety of traversals.", category = "Generics", exposed = True, exposedModules = [ModuleName ["Data","Generics"],ModuleName ["Data","Generics","Basics"],ModuleName ["Data","Generics","Instances"],ModuleName ["Data","Generics","Aliases"],ModuleName ["Data","Generics","Schemes"],ModuleName ["Data","Generics","Text"],ModuleName ["Data","Generics","Twins"],ModuleName ["Data","Generics","Builders"],ModuleName ["Generics","SYB"],ModuleName ["Generics","SYB","Basics"],ModuleName ["Generics","SYB","Instances"],ModuleName ["Generics","SYB","Aliases"],ModuleName ["Generics","SYB","Schemes"],ModuleName ["Generics","SYB","Text"],ModuleName ["Generics","SYB","Twins"],ModuleName ["Generics","SYB","Builders"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/haskell-packages/ghc/lib/syb-0.3.6.1/ghc-7.4.2"], libraryDirs = ["/usr/lib/haskell-packages/ghc/lib/syb-0.3.6.1/ghc-7.4.2"], hsLibraries = ["HSsyb-0.3.6.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/syb-0.3.6.1/syb.haddock"], haddockHTMLs = ["/usr/share/doc/libghc-syb-doc/html/"]}),(InstalledPackageId "template-haskell-2.7.0.0-718c7a8346a48b195831957f3dba0eac",InstalledPackageInfo {installedPackageId = InstalledPackageId "template-haskell-2.7.0.0-718c7a8346a48b195831957f3dba0eac", sourcePackageId = PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,7,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "Facilities for manipulating Haskell source code using Template Haskell.", category = "", exposed = True, exposedModules = [ModuleName ["Language","Haskell","TH","Syntax","Internals"],ModuleName ["Language","Haskell","TH","Syntax"],ModuleName ["Language","Haskell","TH","PprLib"],ModuleName ["Language","Haskell","TH","Ppr"],ModuleName ["Language","Haskell","TH","Lib"],ModuleName ["Language","Haskell","TH","Quote"],ModuleName ["Language","Haskell","TH"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/template-haskell-2.7.0.0"], libraryDirs = ["/usr/lib/ghc/template-haskell-2.7.0.0"], hsLibraries = ["HStemplate-haskell-2.7.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "pretty-1.1.1.0-867dcdeb02592f3d2a707618561c7b86"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/template-haskell-2.7.0.0/template-haskell.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/template-haskell-2.7.0.0"]}),(InstalledPackageId "text-0.11.3.1-6cb88d38e009bd49b2a22cdfd8a9f478",InstalledPackageInfo {installedPackageId = InstalledPackageId "text-0.11.3.1-6cb88d38e009bd49b2a22cdfd8a9f478", sourcePackageId = PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [0,11,3,1], versionTags = []}}, license = BSD3, copyright = "2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Bryan O'Sullivan <bos@serpentine.com>", stability = "", homepage = "https://github.com/bos/text", pkgUrl = "", synopsis = "An efficient packed Unicode text type.", description = "\nAn efficient packed, immutable Unicode text type (both strict and\nlazy), with a powerful loop fusion optimization framework.\n\nThe 'Text' type represents Unicode character strings, in a time and\nspace-efficient manner. This package provides text processing\ncapabilities that are optimized for performance critical use, both\nin terms of large data quantities and high speed.\n\nThe 'Text' type provides character-encoding, type-safe case\nconversion via whole-string case conversion functions. It also\nprovides a range of functions for converting 'Text' values to and from\n'ByteStrings', using several standard encodings.\n\nEfficient locale-sensitive support for text IO is also supported.\n\nThese modules are intended to be imported qualified, to avoid name\nclashes with Prelude functions, e.g.\n\n> import qualified Data.Text as T\n\nTo use an extended and very rich family of functions for working\nwith Unicode text (including normalization, regular expressions,\nnon-standard encodings, text breaking, and locales), see\nthe @text-icu@ package:\n<http://hackage.haskell.org/package/text-icu>\n\n&#8212;&#8212; RELEASE NOTES &#8212;&#8212;\n\nChanges in 0.11.2.0:\n\n* String literals are now converted directly from the format in\nwhich GHC stores them into 'Text', without an intermediate\ntransformation through 'String', and without inlining of\nconversion code at each site where a string literal is declared.\n", category = "Data, Text", exposed = True, exposedModules = [ModuleName ["Data","Text"],ModuleName ["Data","Text","Array"],ModuleName ["Data","Text","Encoding"],ModuleName ["Data","Text","Encoding","Error"],ModuleName ["Data","Text","Foreign"],ModuleName ["Data","Text","IO"],ModuleName ["Data","Text","Internal"],ModuleName ["Data","Text","Lazy"],ModuleName ["Data","Text","Lazy","Builder"],ModuleName ["Data","Text","Lazy","Builder","Int"],ModuleName ["Data","Text","Lazy","Builder","RealFloat"],ModuleName ["Data","Text","Lazy","Encoding"],ModuleName ["Data","Text","Lazy","IO"],ModuleName ["Data","Text","Lazy","Internal"],ModuleName ["Data","Text","Lazy","Read"],ModuleName ["Data","Text","Read"],ModuleName ["Data","Text","Unsafe"]], hiddenModules = [ModuleName ["Data","Text","Encoding","Fusion"],ModuleName ["Data","Text","Encoding","Fusion","Common"],ModuleName ["Data","Text","Encoding","Utf16"],ModuleName ["Data","Text","Encoding","Utf32"],ModuleName ["Data","Text","Encoding","Utf8"],ModuleName ["Data","Text","Fusion"],ModuleName ["Data","Text","Fusion","CaseMapping"],ModuleName ["Data","Text","Fusion","Common"],ModuleName ["Data","Text","Fusion","Internal"],ModuleName ["Data","Text","Fusion","Size"],ModuleName ["Data","Text","IO","Internal"],ModuleName ["Data","Text","Lazy","Builder","Functions"],ModuleName ["Data","Text","Lazy","Builder","Int","Digits"],ModuleName ["Data","Text","Lazy","Builder","Internal"],ModuleName ["Data","Text","Lazy","Builder","RealFloat","Functions"],ModuleName ["Data","Text","Lazy","Encoding","Fusion"],ModuleName ["Data","Text","Lazy","Fusion"],ModuleName ["Data","Text","Lazy","Search"],ModuleName ["Data","Text","Private"],ModuleName ["Data","Text","Search"],ModuleName ["Data","Text","Unsafe","Base"],ModuleName ["Data","Text","UnsafeChar"],ModuleName ["Data","Text","UnsafeShift"],ModuleName ["Data","Text","Util"]], trusted = False, importDirs = ["/home/user/.cabal/lib/text-0.11.3.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/text-0.11.3.1/ghc-7.4.2"], hsLibraries = ["HStext-0.11.3.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/text-0.11.3.1/html/text.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/text-0.11.3.1/html"]}),(InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52",InstalledPackageInfo {installedPackageId = InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52", sourcePackageId = PackageIdentifier {pkgName = PackageName "time", pkgVersion = Version {versionBranch = [1,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "<ashley@semantic.org>", author = "Ashley Yakeley", stability = "stable", homepage = "http://semantic.org/TimeLib/", pkgUrl = "", synopsis = "A time library", description = "A time library", category = "System", exposed = True, exposedModules = [ModuleName ["Data","Time","Calendar"],ModuleName ["Data","Time","Calendar","MonthDay"],ModuleName ["Data","Time","Calendar","OrdinalDate"],ModuleName ["Data","Time","Calendar","WeekDate"],ModuleName ["Data","Time","Calendar","Julian"],ModuleName ["Data","Time","Calendar","Easter"],ModuleName ["Data","Time","Clock"],ModuleName ["Data","Time","Clock","POSIX"],ModuleName ["Data","Time","Clock","TAI"],ModuleName ["Data","Time","LocalTime"],ModuleName ["Data","Time","Format"],ModuleName ["Data","Time"]], hiddenModules = [ModuleName ["Data","Time","Calendar","Private"],ModuleName ["Data","Time","Calendar","Days"],ModuleName ["Data","Time","Calendar","Gregorian"],ModuleName ["Data","Time","Calendar","JulianYearDay"],ModuleName ["Data","Time","Clock","Scale"],ModuleName ["Data","Time","Clock","UTC"],ModuleName ["Data","Time","Clock","CTimeval"],ModuleName ["Data","Time","Clock","UTCDiff"],ModuleName ["Data","Time","LocalTime","TimeZone"],ModuleName ["Data","Time","LocalTime","TimeOfDay"],ModuleName ["Data","Time","LocalTime","LocalTime"],ModuleName ["Data","Time","Format","Parse"]], trusted = False, importDirs = ["/usr/lib/ghc/time-1.4"], libraryDirs = ["/usr/lib/ghc/time-1.4"], hsLibraries = ["HStime-1.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/lib/ghc/time-1.4/include"], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed",InstalledPackageId "old-locale-1.0.0.4-b1d945ebea59a524cba400a524cb40aa"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/time-1.4/time.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/time-1.4"]}),(InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf",InstalledPackageInfo {installedPackageId = InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf", sourcePackageId = PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Ross Paterson <ross@soi.city.ac.uk>", author = "Andy Gill, Ross Paterson", stability = "", homepage = "", pkgUrl = "", synopsis = "Concrete functor and monad transformers", description = "A portable library of functor and monad transformers, inspired by\nthe paper \\\"Functional Programming with Overloading and Higher-Order\nPolymorphism\\\", by Mark P Jones,\nin /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).\n\nThis package contains:\n\n* the monad transformer class (in \"Control.Monad.Trans.Class\")\n\n* concrete functor and monad transformers, each with associated\noperations and functions to lift operations associated with other\ntransformers.\n\nIt can be used on its own in portable Haskell code, or with the monad\nclasses in the @mtl@ or @monads-tf@ packages, which automatically\nlift operations introduced by monad transformers through other\ntransformers.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Applicative","Backwards"],ModuleName ["Control","Applicative","Lift"],ModuleName ["Control","Monad","IO","Class"],ModuleName ["Control","Monad","Trans","Class"],ModuleName ["Control","Monad","Trans","Cont"],ModuleName ["Control","Monad","Trans","Error"],ModuleName ["Control","Monad","Trans","Identity"],ModuleName ["Control","Monad","Trans","List"],ModuleName ["Control","Monad","Trans","Maybe"],ModuleName ["Control","Monad","Trans","Reader"],ModuleName ["Control","Monad","Trans","RWS"],ModuleName ["Control","Monad","Trans","RWS","Lazy"],ModuleName ["Control","Monad","Trans","RWS","Strict"],ModuleName ["Control","Monad","Trans","State"],ModuleName ["Control","Monad","Trans","State","Lazy"],ModuleName ["Control","Monad","Trans","State","Strict"],ModuleName ["Control","Monad","Trans","Writer"],ModuleName ["Control","Monad","Trans","Writer","Lazy"],ModuleName ["Control","Monad","Trans","Writer","Strict"],ModuleName ["Data","Functor","Compose"],ModuleName ["Data","Functor","Constant"],ModuleName ["Data","Functor","Identity"],ModuleName ["Data","Functor","Product"],ModuleName ["Data","Functor","Reverse"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/haskell-packages/ghc/lib/transformers-0.3.0.0/ghc-7.4.2"], libraryDirs = ["/usr/lib/haskell-packages/ghc/lib/transformers-0.3.0.0/ghc-7.4.2"], hsLibraries = ["HStransformers-0.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/transformers-0.3.0.0/transformers.haddock"], haddockHTMLs = ["/usr/share/doc/libghc-transformers-doc/html/"]}),(InstalledPackageId "unix-2.6.0.1-3234fad0b5a47a931cafe48ceb6885f5",InstalledPackageInfo {installedPackageId = InstalledPackageId "unix-2.6.0.1-3234fad0b5a47a931cafe48ceb6885f5", sourcePackageId = PackageIdentifier {pkgName = PackageName "unix", pkgVersion = Version {versionBranch = [2,6,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "POSIX functionality", description = "This package gives you access to the set of operating system\nservices standardised by POSIX 1003.1b (or the IEEE Portable\nOperating System Interface for Computing Environments -\nIEEE Std. 1003.1).\n\nThe package is not supported under Windows (except under Cygwin).", category = "System", exposed = True, exposedModules = [ModuleName ["System","Posix"],ModuleName ["System","Posix","ByteString"],ModuleName ["System","Posix","Error"],ModuleName ["System","Posix","Resource"],ModuleName ["System","Posix","Time"],ModuleName ["System","Posix","Unistd"],ModuleName ["System","Posix","User"],ModuleName ["System","Posix","Signals"],ModuleName ["System","Posix","Signals","Exts"],ModuleName ["System","Posix","Semaphore"],ModuleName ["System","Posix","SharedMem"],ModuleName ["System","Posix","ByteString","FilePath"],ModuleName ["System","Posix","Directory"],ModuleName ["System","Posix","Directory","ByteString"],ModuleName ["System","Posix","DynamicLinker","Module"],ModuleName ["System","Posix","DynamicLinker","Module","ByteString"],ModuleName ["System","Posix","DynamicLinker","Prim"],ModuleName ["System","Posix","DynamicLinker","ByteString"],ModuleName ["System","Posix","DynamicLinker"],ModuleName ["System","Posix","Files"],ModuleName ["System","Posix","Files","ByteString"],ModuleName ["System","Posix","IO"],ModuleName ["System","Posix","IO","ByteString"],ModuleName ["System","Posix","Env"],ModuleName ["System","Posix","Env","ByteString"],ModuleName ["System","Posix","Process"],ModuleName ["System","Posix","Process","Internals"],ModuleName ["System","Posix","Process","ByteString"],ModuleName ["System","Posix","Temp"],ModuleName ["System","Posix","Temp","ByteString"],ModuleName ["System","Posix","Terminal"],ModuleName ["System","Posix","Terminal","ByteString"]], hiddenModules = [ModuleName ["System","Posix","Directory","Common"],ModuleName ["System","Posix","DynamicLinker","Common"],ModuleName ["System","Posix","Files","Common"],ModuleName ["System","Posix","IO","Common"],ModuleName ["System","Posix","Process","Common"],ModuleName ["System","Posix","Terminal","Common"]], trusted = False, importDirs = ["/home/user/.cabal/lib/unix-2.6.0.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/unix-2.6.0.1/ghc-7.4.2"], hsLibraries = ["HSunix-2.6.0.1"], extraLibraries = ["rt","util","dl","pthread"], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/unix-2.6.0.1/ghc-7.4.2/include"], includes = ["HsUnix.h","execvpe.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/unix-2.6.0.1/html/unix.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/unix-2.6.0.1/html"]}),(InstalledPackageId "vector-0.10.0.1-fdf8e0c3f3c1cae1113ab97c34aa5c14",InstalledPackageInfo {installedPackageId = InstalledPackageId "vector-0.10.0.1-fdf8e0c3f3c1cae1113ab97c34aa5c14", sourcePackageId = PackageIdentifier {pkgName = PackageName "vector", pkgVersion = Version {versionBranch = [0,10,0,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2008-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "http://code.haskell.org/vector", pkgUrl = "", synopsis = "Efficient Arrays", description = "\nAn efficient implementation of Int-indexed arrays (both mutable\nand immutable), with a powerful loop optimisation framework .\n\nIt is structured as follows:\n\n[\"Data.Vector\"] Boxed vectors of arbitrary types.\n\n[\"Data.Vector.Unboxed\"] Unboxed vectors with an adaptive\nrepresentation based on data type families.\n\n[\"Data.Vector.Storable\"] Unboxed vectors of 'Storable' types.\n\n[\"Data.Vector.Primitive\"] Unboxed vectors of primitive types as\ndefined by the @primitive@ package. \"Data.Vector.Unboxed\" is more\nflexible at no performance cost.\n\n[\"Data.Vector.Generic\"] Generic interface to the vector types.\n\nThere is also a (draft) tutorial on common uses of vector.\n\n* <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>\n\nPlease use the project trac to submit bug reports and feature\nrequests.\n\n* <http://trac.haskell.org/vector>\n\nChanges in version 0.10.0.1\n\n* Require @primitive@ to include workaround for a GHC array copying bug\n\nChanges in version 0.10\n\n* @NFData@ instances\n\n* More efficient block fills\n\n* Safe Haskell support removed\n", category = "Data, Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Vector","Internal","Check"],ModuleName ["Data","Vector","Fusion","Util"],ModuleName ["Data","Vector","Fusion","Stream","Size"],ModuleName ["Data","Vector","Fusion","Stream","Monadic"],ModuleName ["Data","Vector","Fusion","Stream"],ModuleName ["Data","Vector","Generic","Mutable"],ModuleName ["Data","Vector","Generic","Base"],ModuleName ["Data","Vector","Generic","New"],ModuleName ["Data","Vector","Generic"],ModuleName ["Data","Vector","Primitive","Mutable"],ModuleName ["Data","Vector","Primitive"],ModuleName ["Data","Vector","Storable","Internal"],ModuleName ["Data","Vector","Storable","Mutable"],ModuleName ["Data","Vector","Storable"],ModuleName ["Data","Vector","Unboxed","Base"],ModuleName ["Data","Vector","Unboxed","Mutable"],ModuleName ["Data","Vector","Unboxed"],ModuleName ["Data","Vector","Mutable"],ModuleName ["Data","Vector"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/vector-0.10.0.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/vector-0.10.0.1/ghc-7.4.2"], hsLibraries = ["HSvector-0.10.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/vector-0.10.0.1/ghc-7.4.2/include"], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "primitive-0.5.0.1-a269ac922313cfdb63da08f8624fba7d"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/vector-0.10.0.1/html/vector.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/vector-0.10.0.1/html"]})]) (fromList [(PackageName "MonadCatchIO-transformers",fromList [(Version {versionBranch = [0,3,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "MonadCatchIO-transformers-0.3.0.0-3d9f2598a492284fcb08e73b1981b4a4", sourcePackageId = PackageIdentifier {pkgName = PackageName "MonadCatchIO-transformers", pkgVersion = Version {versionBranch = [0,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "ariep@xs4all.nl", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Monad-transformer compatible version of the Control.Exception module", description = "Provides functions to throw and catch exceptions. Unlike the functions from\n@Control.Exception@, which work in @IO@, these work in any stack of monad\ntransformers (from the 'transformers' package) with @IO@ as the base monad.\nYou can extend this functionality to other monads, by creating an instance\nof the @MonadCatchIO@ class.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","CatchIO"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/MonadCatchIO-transformers-0.3.0.0/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/MonadCatchIO-transformers-0.3.0.0/ghc-7.4.2"], hsLibraries = ["HSMonadCatchIO-transformers-0.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "extensible-exceptions-0.1.1.4-3d9bd197c43329612c640f24179a7f19",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/MonadCatchIO-transformers-0.3.0.0/html/MonadCatchIO-transformers.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/MonadCatchIO-transformers-0.3.0.0/html"]}])]),(PackageName "RefSerialize",fromList [(Version {versionBranch = [0,3,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "RefSerialize-0.3.1.0-f1d5b4ccd3042e76abd870d718497cf0", sourcePackageId = PackageIdentifier {pkgName = PackageName "RefSerialize", pkgVersion = Version {versionBranch = [0,3,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "", homepage = "", pkgUrl = "", synopsis = "Write to and read from ByteStrings maintaining internal memory references", description = "Read, Show and Binary instances do not check for internal data references to the same address.\nAs a result, the data is duplicated when serialized. This is a waste of space in the filesystem\nand  also a waste of serialization time. but the worst consequence is that, when the serialized data is read,\nit allocates multiple copies for the same object when referenced multiple times. Because multiple referenced\ndata is very typical in a pure language such is Haskell, this means that the resulting data loose the beatiful\neconomy of space and processing time that referential transparency permits.\n\nIn this release the default \"(Read a, Show a) => Refserialize a\" has been removed.\n\nSee \"Data.RefSerialize\" for details", category = "Parsing, Data, Database", exposed = True, exposedModules = [ModuleName ["Data","RefSerialize"],ModuleName ["Data","RefSerialize","Parser"],ModuleName ["Data","RefSerialize","Serialize"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/RefSerialize-0.3.1.0"], libraryDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/RefSerialize-0.3.1.0"], hsLibraries = ["HSRefSerialize-0.3.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/RefSerialize-0.3.1.0/html/RefSerialize.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/RefSerialize-0.3.1.0/html"]}])]),(PackageName "TCache",fromList [(Version {versionBranch = [0,11,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "TCache-0.11.0.0-184e0986ee04b64972952306503ddb2a", sourcePackageId = PackageIdentifier {pkgName = PackageName "TCache", pkgVersion = Version {versionBranch = [0,11,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "", homepage = "", pkgUrl = "", synopsis = "A Transactional cache with user-defined persistence", description = "TCache is a transactional cache with configurable persitence. It allows conventional\nSTM transactions for objects that syncronize  with their user-defined storages.\nState in memory and into permanent storage is transactionally coherent.\n\nThe package implements serializable STM references, access by key and by record field value, triggers,\nfull text and field indexation, default serialization and a query language based on record fields\n\n0.11.0.0 added setIndexParsist to define persistence for indexes by type. started the addition of readDBRefs, readResources and so on for simultaneous read, writes and deletes of\nobjects of the same type.\n\n0.10.2.0 Added setDefaultPersist and modified the signature of setPersist in Data.TCache.DefaultPersistence.\nFixed issues with ghc 7.6.3\n\n0.10  version add memoization and a persistent and transactional collection/queue.\n\n0.10.0.8 subversion add cachedByKeySTM\n\n0.10.0.9 fixed an error in clearSyncChacheProc and SynWrite Asyncronous that checked the cache continuously\n\nSee \"Data.TCache\" for details\n\nIn this release:\n\nDropped Data.Hashtable (deprecated). Now it uses the package hashtables", category = "Data, Database", exposed = True, exposedModules = [ModuleName ["Data","TCache"],ModuleName ["Data","TCache","DefaultPersistence"],ModuleName ["Data","TCache","Defs"],ModuleName ["Data","TCache","IResource"],ModuleName ["Data","TCache","IndexQuery"],ModuleName ["Data","TCache","IndexText"],ModuleName ["Data","TCache","Memoization"],ModuleName ["Data","TCache","Triggers"],ModuleName ["Data","Persistent","Collection"],ModuleName ["Data","Persistent","IDynamic"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/TCache-0.11.0.0"], libraryDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/TCache-0.11.0.0"], hsLibraries = ["HSTCache-0.11.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "RefSerialize-0.3.1.0-f1d5b4ccd3042e76abd870d718497cf0",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "directory-1.2.0.1-703f5815a12bc673a611f968f42ccaad",InstalledPackageId "hashtables-1.1.2.1-54d9d9d25444aaba39b693b453d0b555",InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56",InstalledPackageId "old-time-1.1.0.0-3e0f7b48d6c1d1415ad852e23725fdc1",InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8",InstalledPackageId "text-0.11.3.1-6cb88d38e009bd49b2a22cdfd8a9f478"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/TCache-0.11.0.0/html/TCache.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/TCache-0.11.0.0/html"]}])]),(PackageName "Workflow",fromList [(Version {versionBranch = [0,8,0,8], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "Workflow-0.8.0.8-7c05ea0f35ae7a0e82ade2e476cb7096", sourcePackageId = PackageIdentifier {pkgName = PackageName "Workflow", pkgVersion = Version {versionBranch = [0,8,0,8], versionTags = []}}, license = BSD3, copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "experimental", homepage = "", pkgUrl = "", synopsis = "Workflow patterns over a monad for thread state logging & recovery", description = "Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes a\nmonadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations\nor procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication\nfailures, timeouts or shutdowns. It also can be used if you like to restart your\nprogram at the point where the user left it last time\n.             .\nThe computation can be restarted at the interrupted point thanks to its logged state in permanent storage.\nThe thread state is located in files by default. It can be moved and continued in another computer.\nBesides that, the package also provides other higher level services associated to workflows: Workflow patterns,\nand a general configuarion utility, workflow observation events and references to the internal state.\nThe state can be stored maintaining memory references (using the \"RefSerialize\" package), so that it is possible to track the modifications\nof a big structure (for example a document) along the workflow execution.\n\nSee \"Control.Workflow\" for details\n\nIn this release:\n* minor changes", category = "Control, Workflow", exposed = True, exposedModules = [ModuleName ["Control","Workflow"],ModuleName ["Control","Workflow","Configuration"],ModuleName ["Control","Workflow","Patterns"],ModuleName ["Control","Workflow","Stat"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/Workflow-0.8.0.8"], libraryDirs = ["/home/user/.cabal/lib/i386-linux-ghc-7.4.2/Workflow-0.8.0.8"], hsLibraries = ["HSWorkflow-0.8.0.8"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "MonadCatchIO-transformers-0.3.0.0-3d9f2598a492284fcb08e73b1981b4a4",InstalledPackageId "RefSerialize-0.3.1.0-f1d5b4ccd3042e76abd870d718497cf0",InstalledPackageId "TCache-0.11.0.0-184e0986ee04b64972952306503ddb2a",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "directory-1.2.0.1-703f5815a12bc673a611f968f42ccaad",InstalledPackageId "extensible-exceptions-0.1.1.4-3d9bd197c43329612c640f24179a7f19",InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56",InstalledPackageId "old-time-1.1.0.0-3e0f7b48d6c1d1415ad852e23725fdc1",InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8",InstalledPackageId "vector-0.10.0.1-fdf8e0c3f3c1cae1113ab97c34aa5c14"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/Workflow-0.8.0.8/html/Workflow.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/i386-linux-ghc-7.4.2/Workflow-0.8.0.8/html"]}])]),(PackageName "array",fromList [(Version {versionBranch = [0,4,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61", sourcePackageId = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,4,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Mutable and immutable arrays", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Safe"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","MArray","Safe"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","ST","Safe"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Storable","Safe"],ModuleName ["Data","Array","Storable","Internals"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array","Unsafe"],ModuleName ["Data","Array"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/array-0.4.0.0"], libraryDirs = ["/usr/lib/ghc/array-0.4.0.0"], hsLibraries = ["HSarray-0.4.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/array-0.4.0.0/array.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/array-0.4.0.0"]}])]),(PackageName "base",fromList [(Version {versionBranch = [4,5,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,5,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Conc"],ModuleName ["GHC","Conc","IO"],ModuleName ["GHC","Conc","Signal"],ModuleName ["GHC","Conc","Sync"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Constants"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Fingerprint"],ModuleName ["GHC","Fingerprint","Type"],ModuleName ["GHC","Float"],ModuleName ["GHC","Float","ConversionUtils"],ModuleName ["GHC","Float","RealFracMethods"],ModuleName ["GHC","Foreign"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IO","Buffer"],ModuleName ["GHC","IO","BufferedIO"],ModuleName ["GHC","IO","Device"],ModuleName ["GHC","IO","Encoding"],ModuleName ["GHC","IO","Encoding","CodePage"],ModuleName ["GHC","IO","Encoding","Failure"],ModuleName ["GHC","IO","Encoding","Iconv"],ModuleName ["GHC","IO","Encoding","Latin1"],ModuleName ["GHC","IO","Encoding","Types"],ModuleName ["GHC","IO","Encoding","UTF16"],ModuleName ["GHC","IO","Encoding","UTF32"],ModuleName ["GHC","IO","Encoding","UTF8"],ModuleName ["GHC","IO","Exception"],ModuleName ["GHC","IO","FD"],ModuleName ["GHC","IO","Handle"],ModuleName ["GHC","IO","Handle","FD"],ModuleName ["GHC","IO","Handle","Internals"],ModuleName ["GHC","IO","Handle","Text"],ModuleName ["GHC","IO","Handle","Types"],ModuleName ["GHC","IO","IOMode"],ModuleName ["GHC","IOArray"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","IORef"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","MVar"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","Stack"],ModuleName ["GHC","Stats"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","STRef"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["GHC","Event"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","OldException"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Safe"],ModuleName ["Control","Monad","ST","Unsafe"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Lazy","Safe"],ModuleName ["Control","Monad","ST","Lazy","Unsafe"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Control","Monad","Zip"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Data"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","Functor"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Typeable","Internal"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","ForeignPtr","Safe"],ModuleName ["Foreign","ForeignPtr","Unsafe"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Safe"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Marshal","Unsafe"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","Safe"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [ModuleName ["GHC","Event","Array"],ModuleName ["GHC","Event","Clock"],ModuleName ["GHC","Event","Control"],ModuleName ["GHC","Event","EPoll"],ModuleName ["GHC","Event","IntMap"],ModuleName ["GHC","Event","Internal"],ModuleName ["GHC","Event","KQueue"],ModuleName ["GHC","Event","Manager"],ModuleName ["GHC","Event","PSQ"],ModuleName ["GHC","Event","Poll"],ModuleName ["GHC","Event","Thread"],ModuleName ["GHC","Event","Unique"],ModuleName ["Control","Monad","ST","Imp"],ModuleName ["Control","Monad","ST","Lazy","Imp"],ModuleName ["Foreign","ForeignPtr","Imp"]], trusted = False, importDirs = ["/usr/lib/ghc/base-4.5.1.0"], libraryDirs = ["/usr/lib/ghc/base-4.5.1.0"], hsLibraries = ["HSbase-4.5.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/lib/ghc/base-4.5.1.0/include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b",InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/base-4.5.1.0/base.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/base-4.5.1.0"]}])]),(PackageName "binary",fromList [(Version {versionBranch = [0,6,4,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b", sourcePackageId = PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,6,4,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Lennart Kolmodin, Don Stewart <dons@galois.com>", author = "Lennart Kolmodin <kolmodin@gmail.com>", stability = "provisional", homepage = "https://github.com/kolmodin/binary", pkgUrl = "", synopsis = "Binary serialisation for Haskell values using lazy ByteStrings", description = "Efficient, pure binary serialisation using lazy ByteStrings.\nHaskell values may be encoded to and from binary formats,\nwritten to disk as binary, or sent over the network.\nSerialisation speeds of over 1 G\\/sec have been observed,\nso this library should be suitable for high performance\nscenarios.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Binary"],ModuleName ["Data","Binary","Put"],ModuleName ["Data","Binary","Get"],ModuleName ["Data","Binary","Get","Internal"],ModuleName ["Data","Binary","Builder"],ModuleName ["Data","Binary","Builder","Internal"]], hiddenModules = [ModuleName ["Data","Binary","Generic"],ModuleName ["Data","Binary","Builder","Base"],ModuleName ["Data","Binary","Class"]], trusted = False, importDirs = ["/home/user/.cabal/lib/binary-0.6.4.0/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/binary-0.6.4.0/ghc-7.4.2"], hsLibraries = ["HSbinary-0.6.4.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/binary-0.6.4.0/html/binary.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/binary-0.6.4.0/html"]}])]),(PackageName "bytestring",fromList [(Version {versionBranch = [0,10,4,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1", sourcePackageId = PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,10,4,0], versionTags = []}}, license = BSD3, copyright = "Copyright (c) Don Stewart          2005-2009,\n(c) Duncan Coutts        2006-2013,\n(c) David Roundy         2003-2005,\n(c) Jasper Van der Jeugt 2010,\n(c) Simon Meier          2010-2013.", maintainer = "Don Stewart <dons00@gmail.com>,\nDuncan Coutts <duncan@community.haskell.org>", author = "Don Stewart,\nDuncan Coutts", stability = "", homepage = "https://github.com/haskell/bytestring", pkgUrl = "", synopsis = "Fast, compact, strict and lazy byte strings with a list interface", description = "An efficient compact, immutable byte string type (both strict and lazy)\nsuitable for binary or 8-bit character data.\n\nThe 'ByteString' type represents sequences of bytes or 8-bit characters.\nIt is suitable for high performance use, both in terms of large data\nquantities, or high speed requirements. The 'ByteString' functions follow\nthe same style as Haskell\\'s ordinary lists, so it is easy to convert code\nfrom using 'String' to 'ByteString'.\n\nTwo 'ByteString' variants are provided:\n\n* Strict 'ByteString's keep the string as a single large array. This\nmakes them convenient for passing data between C and Haskell.\n\n* Lazy 'ByteString's use a lazy list of strict chunks which makes it\nsuitable for I\\/O streaming tasks.\n\nThe @Char8@ modules provide a character-based view of the same\nunderlying 'ByteString' types. This makes it convenient to handle mixed\nbinary and 8-bit character content (which is common in many file formats\nand network protocols).\n\nThe 'Builder' module provides an efficient way to build up 'ByteString's\nin an ad-hoc way by repeated concatenation. This is ideal for fast\nserialisation or pretty printing.\n\nThere is also a 'ShortByteString' type which has a lower memory overhead\nand can can be converted to or from a 'ByteString', but supports very few\nother operations. It is suitable for keeping many short strings in memory.\n\n'ByteString's are not designed for Unicode. For Unicode strings you should\nuse the 'Text' type from the @text@ package.\n\nThese modules are intended to be imported qualified, to avoid name clashes\nwith \"Prelude\" functions, e.g.\n\n> import qualified Data.ByteString as BS", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ByteString"],ModuleName ["Data","ByteString","Char8"],ModuleName ["Data","ByteString","Unsafe"],ModuleName ["Data","ByteString","Internal"],ModuleName ["Data","ByteString","Lazy"],ModuleName ["Data","ByteString","Lazy","Char8"],ModuleName ["Data","ByteString","Lazy","Internal"],ModuleName ["Data","ByteString","Short"],ModuleName ["Data","ByteString","Short","Internal"],ModuleName ["Data","ByteString","Builder"],ModuleName ["Data","ByteString","Builder","Extra"],ModuleName ["Data","ByteString","Builder","Prim"],ModuleName ["Data","ByteString","Builder","Internal"],ModuleName ["Data","ByteString","Builder","Prim","Internal"],ModuleName ["Data","ByteString","Lazy","Builder"],ModuleName ["Data","ByteString","Lazy","Builder","Extras"],ModuleName ["Data","ByteString","Lazy","Builder","ASCII"]], hiddenModules = [ModuleName ["Data","ByteString","Builder","ASCII"],ModuleName ["Data","ByteString","Builder","Prim","Binary"],ModuleName ["Data","ByteString","Builder","Prim","ASCII"],ModuleName ["Data","ByteString","Builder","Prim","Internal","Floating"],ModuleName ["Data","ByteString","Builder","Prim","Internal","UncheckedShifts"],ModuleName ["Data","ByteString","Builder","Prim","Internal","Base16"]], trusted = False, importDirs = ["/home/user/.cabal/lib/bytestring-0.10.4.0/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/bytestring-0.10.4.0/ghc-7.4.2"], hsLibraries = ["HSbytestring-0.10.4.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/bytestring-0.10.4.0/ghc-7.4.2/include"], includes = ["fpstring.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/bytestring-0.10.4.0/html/bytestring.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/bytestring-0.10.4.0/html"]}])]),(PackageName "containers",fromList [(Version {versionBranch = [0,4,2,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87", sourcePackageId = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,4,2,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "fox@ucw.cz", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Assorted concrete container types", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Graph"],ModuleName ["Data","Sequence"],ModuleName ["Data","Tree"],ModuleName ["Data","IntMap"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Set"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/containers-0.4.2.1"], libraryDirs = ["/usr/lib/ghc/containers-0.4.2.1"], hsLibraries = ["HScontainers-0.4.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/containers-0.4.2.1/containers.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/containers-0.4.2.1"]}])]),(PackageName "data-accessor",fromList [(Version {versionBranch = [0,2,2,3], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "data-accessor-0.2.2.3-77dcf8c6bef4384c6026111048bdd11d", sourcePackageId = PackageIdentifier {pkgName = PackageName "data-accessor", pkgVersion = Version {versionBranch = [0,2,2,3], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Henning Thielemann <haskell@henning-thielemann.de>", author = "Henning Thielemann <haskell@henning-thielemann.de>, Luke Palmer <lrpalmer@gmail.com>", stability = "", homepage = "http://www.haskell.org/haskellwiki/Record_access", pkgUrl = "", synopsis = "Utilities for accessing and manipulating fields of records", description = "In Haskell 98 the name of a record field\nis automatically also the name of a function which gets the value\nof the according field.\nE.g. if we have\n\ndata Pair a b = Pair\nfirst :: a, second :: b\n\nthen\n\n> first  :: Pair a b -> a\n> second :: Pair a b -> b\n\nHowever for setting or modifying a field value\nwe need to use some syntactic sugar, which is often clumsy.\n\nmodifyFirst :: (a -> a) -> (Pair a b -> Pair a b)\nmodifyFirst f r\\@(Pair\nfirst=a\n) = r\nfirst = f a\n\nWith this package you can define record field accessors\nwhich allow setting, getting and modifying values easily.\nThe package clearly demonstrates the power of the functional approach:\nYou can combine accessors of a record and sub-records,\nto make the access look like the fields of the sub-record belong to the main record.\n\nExample:\n\n> *Data.Accessor.Example> (first^:second^=10) (('b',7),\"hallo\")\n> (('b',10),\"hallo\")\n\nYou can easily manipulate record fields in a 'Control.Monad.State.State' monad,\nyou can easily code 'Show' instances that use the Accessor syntax\nand you can parse binary streams into records.\nSee @Data.Accessor.Example@ for demonstration of all features.\n\nIt would be great if in revised Haskell versions the names of record fields\nare automatically 'Data.Accessor.Accessor's\nrather than plain @get@ functions.\nFor now, the package @data-accessor-template@ provides Template Haskell functions\nfor automated generation of 'Data.Acesssor.Accessor's.\nSee also the other @data-accessor@ packages\nthat provide an Accessor interface to other data types.\nThe package @enumset@ provides accessors to bit-packed records.\n\nFor similar packages see @lenses@ and @fclabel@.\nA related concept are editors\n<http://conal.net/blog/posts/semantic-editor-combinators/>.\nEditors only consist of a modify method\n(and @modify@ applied to a 'const' function is a @set@ function).\nThis way, they can modify all function values of a function at once,\nwhereas an accessor can only change a single function value,\nsay, it can change @f 0 = 1@ to @f 0 = 2@.\nThis way, editors can even change the type of a record or a function.\nAn Arrow instance can be defined for editors,\nbut for accessors only a Category instance is possible ('(.)' method).\nThe reason is the @arr@ method of the @Arrow@ class,\nthat conflicts with the two-way nature (set and get) of accessors.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Accessor"],ModuleName ["Data","Accessor","Basic"],ModuleName ["Data","Accessor","Container"],ModuleName ["Data","Accessor","Show"],ModuleName ["Data","Accessor","Tuple"],ModuleName ["Data","Accessor","BinaryRead"],ModuleName ["Data","Accessor","MonadState"]], hiddenModules = [ModuleName ["Data","Accessor","Example"],ModuleName ["Data","Accessor","Private"],ModuleName ["Data","Accessor","MonadStatePrivate"]], trusted = False, importDirs = ["/home/user/.cabal/lib/data-accessor-0.2.2.3/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/data-accessor-0.2.2.3/ghc-7.4.2"], hsLibraries = ["HSdata-accessor-0.2.2.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/data-accessor-0.2.2.3/html/data-accessor.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/data-accessor-0.2.2.3/html"]}])]),(PackageName "deepseq",fromList [(Version {versionBranch = [1,3,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed", sourcePackageId = PackageIdentifier {pkgName = PackageName "deepseq", pkgVersion = Version {versionBranch = [1,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Deep evaluation of data structures", description = "This package provides methods for fully evaluating data structures\n(\\\"deep evaluation\\\"). Deep evaluation is often used for adding\nstrictness to a program, e.g. in order to force pending exceptions,\nremove space leaks, or force lazy I/O to happen. It is also useful\nin parallel programs, to ensure pending work does not migrate to the\nwrong thread.\n\nThe primary use of this package is via the 'deepseq' function, a\n\\\"deep\\\" version of 'seq'. It is implemented on top of an 'NFData'\ntypeclass (\\\"Normal Form Data\\\", data structures with no unevaluated\ncomponents) which defines strategies for fully evaluating different\ndata types.\n", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","DeepSeq"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/deepseq-1.3.0.0"], libraryDirs = ["/usr/lib/ghc/deepseq-1.3.0.0"], hsLibraries = ["HSdeepseq-1.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/deepseq-1.3.0.0/deepseq.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/deepseq-1.3.0.0"]}])]),(PackageName "directory",fromList [(Version {versionBranch = [1,2,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "directory-1.2.0.1-703f5815a12bc673a611f968f42ccaad", sourcePackageId = PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,2,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "library for directory handling", description = "This package provides a library for handling directories.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Directory"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/directory-1.2.0.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/directory-1.2.0.1/ghc-7.4.2"], hsLibraries = ["HSdirectory-1.2.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/directory-1.2.0.1/ghc-7.4.2/include"], includes = ["HsDirectory.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "filepath-1.3.0.0-954c43b4f109cbd4121f1231c14d5cff",InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52",InstalledPackageId "unix-2.6.0.1-3234fad0b5a47a931cafe48ceb6885f5"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/directory-1.2.0.1/html/directory.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/directory-1.2.0.1/html"]}])]),(PackageName "distributed-process",fromList [(Version {versionBranch = [0,4,2], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "distributed-process-0.4.2-1facd4e5a0c1f48bb668ad1d68364b80", sourcePackageId = PackageIdentifier {pkgName = PackageName "distributed-process", pkgVersion = Version {versionBranch = [0,4,2], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "watson.timothy@gmail.com, edsko@well-typed.com, duncan@well-typed.com", author = "Duncan Coutts, Nicolas Wu, Edsko de Vries", stability = "experimental", homepage = "http://github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "Cloud Haskell: Erlang-style concurrency in Haskell", description = "This is an implementation of Cloud Haskell, as described in\n/Towards Haskell in the Cloud/ by Jeff Epstein, Andrew Black,\nand Simon Peyton Jones\n(<http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/>),\nalthough some of the details are different. The precise message\npassing semantics are based on /A unified semantics for future Erlang/\nby Hans Svensson, Lars-\197ke Fredlund and Clara Benac Earle.\nYou will probably also want to install a Cloud Haskell backend such\nas distributed-process-simplelocalnet.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Distributed","Process","Internal","Closure","TH"],ModuleName ["Control","Distributed","Process"],ModuleName ["Control","Distributed","Process","Serializable"],ModuleName ["Control","Distributed","Process","Closure"],ModuleName ["Control","Distributed","Process","Node"],ModuleName ["Control","Distributed","Process","Internal","Primitives"],ModuleName ["Control","Distributed","Process","Internal","CQueue"],ModuleName ["Control","Distributed","Process","Internal","Types"],ModuleName ["Control","Distributed","Process","Internal","Trace"],ModuleName ["Control","Distributed","Process","Internal","Closure","BuiltIn"],ModuleName ["Control","Distributed","Process","Internal","Messaging"],ModuleName ["Control","Distributed","Process","Internal","StrictList"],ModuleName ["Control","Distributed","Process","Internal","StrictMVar"],ModuleName ["Control","Distributed","Process","Internal","WeakTQueue"],ModuleName ["Control","Distributed","Process","Internal","StrictContainerAccessors"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/distributed-process-0.4.2/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/distributed-process-0.4.2/ghc-7.4.2"], hsLibraries = ["HSdistributed-process-0.4.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "data-accessor-0.2.2.3-77dcf8c6bef4384c6026111048bdd11d",InstalledPackageId "distributed-static-0.2.1.1-ecdac8346613e3bc60e667cd5116a9c0",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56",InstalledPackageId "network-transport-0.3.0.1-41710340d3a945a886d57381e8ad6563",InstalledPackageId "old-locale-1.0.0.4-b1d945ebea59a524cba400a524cb40aa",InstalledPackageId "random-1.0.1.1-5bcf17e975ad42d3244dd9f6f76c56ce",InstalledPackageId "rank1dynamic-0.1.0.2-1405d177a2b2ff21e91f6132e427d1d6",InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8",InstalledPackageId "syb-0.3.6.1-7e3d2ec5339017845f3db814d70b7bc5",InstalledPackageId "template-haskell-2.7.0.0-718c7a8346a48b195831957f3dba0eac",InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/distributed-process-0.4.2/html/distributed-process.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/distributed-process-0.4.2/html"]}])]),(PackageName "distributed-process-simplelocalnet",fromList [(Version {versionBranch = [0,2,0,9], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "distributed-process-simplelocalnet-0.2.0.9-f624f098d90b78653c4e3f36c8512029", sourcePackageId = PackageIdentifier {pkgName = PackageName "distributed-process-simplelocalnet", pkgVersion = Version {versionBranch = [0,2,0,9], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "watson.timothy@gmail.com, edsko@well-typed.com, duncan@well-typed.com", author = "Duncan Coutts, Nicolas Wu, Edsko de Vries", stability = "experimental", homepage = "http://github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "Simple zero-configuration backend for Cloud Haskell", description = "Simple backend based on the TCP transport which offers node\ndiscovery based on UDP multicast. This is a zero-configuration\nbackend designed to get you going with Cloud Haskell quickly\nwithout imposing any structure on your application.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Distributed","Process","Backend","SimpleLocalnet"],ModuleName ["Control","Distributed","Process","Backend","SimpleLocalnet","Internal","Multicast"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/distributed-process-simplelocalnet-0.2.0.9/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/distributed-process-simplelocalnet-0.2.0.9/ghc-7.4.2"], hsLibraries = ["HSdistributed-process-simplelocalnet-0.2.0.9"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "data-accessor-0.2.2.3-77dcf8c6bef4384c6026111048bdd11d",InstalledPackageId "distributed-process-0.4.2-1facd4e5a0c1f48bb668ad1d68364b80",InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f",InstalledPackageId "network-multicast-0.0.10-13b11fc14bfffd94b4a080772634d41c",InstalledPackageId "network-transport-0.3.0.1-41710340d3a945a886d57381e8ad6563",InstalledPackageId "network-transport-tcp-0.3.1-458e2b8d81cd675be9f64ae0bfadb686",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/distributed-process-simplelocalnet-0.2.0.9/html/distributed-process-simplelocalnet.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/distributed-process-simplelocalnet-0.2.0.9/html"]}])]),(PackageName "distributed-static",fromList [(Version {versionBranch = [0,2,1,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "distributed-static-0.2.1.1-ecdac8346613e3bc60e667cd5116a9c0", sourcePackageId = PackageIdentifier {pkgName = PackageName "distributed-static", pkgVersion = Version {versionBranch = [0,2,1,1], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "edsko@well-typed.com", author = "Edsko de Vries", stability = "", homepage = "http://www.github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "Compositional, type-safe, polymorphic static values and closures", description = "/Towards Haskell in the Cloud/ (Epstein et al, Haskell\nSymposium 2011) introduces the concept of /static/ values:\nvalues that are known at compile time. In a distributed\nsetting where all nodes are running the same executable,\nstatic values can be serialized simply by transmitting a\ncode pointer to the value. This however requires special\ncompiler support, which is not yet available in ghc. We\ncan mimick the behaviour by keeping an explicit mapping\n('RemoteTable') from labels to values (and making sure\nthat all distributed nodes are using the same\n'RemoteTable'). In this module we implement this mimickry\nand various extensions: type safety (including for\npolymorphic static values) and compositionality.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Distributed","Static"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/distributed-static-0.2.1.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/distributed-static-0.2.1.1/ghc-7.4.2"], hsLibraries = ["HSdistributed-static-0.2.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "rank1dynamic-0.1.0.2-1405d177a2b2ff21e91f6132e427d1d6"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/distributed-static-0.2.1.1/html/distributed-static.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/distributed-static-0.2.1.1/html"]}])]),(PackageName "extensible-exceptions",fromList [(Version {versionBranch = [0,1,1,4], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "extensible-exceptions-0.1.1.4-3d9bd197c43329612c640f24179a7f19", sourcePackageId = PackageIdentifier {pkgName = PackageName "extensible-exceptions", pkgVersion = Version {versionBranch = [0,1,1,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Extensible exceptions", description = "This package provides extensible exceptions for both new and\nold versions of GHC (i.e., < 6.10).", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Exception","Extensible"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/extensible-exceptions-0.1.1.4"], libraryDirs = ["/usr/lib/ghc/extensible-exceptions-0.1.1.4"], hsLibraries = ["HSextensible-exceptions-0.1.1.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/extensible-exceptions-0.1.1.4/extensible-exceptions.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/extensible-exceptions-0.1.1.4"]}])]),(PackageName "filepath",fromList [(Version {versionBranch = [1,3,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "filepath-1.3.0.0-954c43b4f109cbd4121f1231c14d5cff", sourcePackageId = PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "", author = "Neil Mitchell", stability = "", homepage = "http://www-users.cs.york.ac.uk/~ndm/filepath/", pkgUrl = "", synopsis = "Library for manipulating FilePaths in a cross platform way.", description = "", category = "System", exposed = True, exposedModules = [ModuleName ["System","FilePath"],ModuleName ["System","FilePath","Posix"],ModuleName ["System","FilePath","Windows"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/filepath-1.3.0.0"], libraryDirs = ["/usr/lib/ghc/filepath-1.3.0.0"], hsLibraries = ["HSfilepath-1.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/filepath-1.3.0.0/filepath.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/filepath-1.3.0.0"]}])]),(PackageName "ghc-prim",fromList [(Version {versionBranch = [0,2,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Prim"],ModuleName ["GHC","Classes"],ModuleName ["GHC","CString"],ModuleName ["GHC","Debug"],ModuleName ["GHC","Generics"],ModuleName ["GHC","Magic"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/ghc-prim-0.2.0.0"], libraryDirs = ["/usr/lib/ghc/ghc-prim-0.2.0.0"], hsLibraries = ["HSghc-prim-0.2.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/ghc-prim-0.2.0.0/ghc-prim.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/ghc-prim-0.2.0.0"]}])]),(PackageName "hashable",fromList [(Version {versionBranch = [1,2,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "hashable-1.2.1.0-4509f214e8f1b5778782a0f03a83ea86", sourcePackageId = PackageIdentifier {pkgName = PackageName "hashable", pkgVersion = Version {versionBranch = [1,2,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "johan.tibell@gmail.com", author = "Milan Straka <fox@ucw.cz>\nJohan Tibell <johan.tibell@gmail.com>", stability = "Provisional", homepage = "http://github.com/tibbe/hashable", pkgUrl = "", synopsis = "A class for types that can be converted to a hash value", description = "This package defines a class, 'Hashable', for types that\ncan be converted to a hash value.  This class\nexists for the benefit of hashing-based data\nstructures.  The package provides instances for\nbasic types and a way to combine hash values.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Hashable"]], hiddenModules = [ModuleName ["Data","Hashable","Generic"],ModuleName ["Data","Hashable","Class"]], trusted = False, importDirs = ["/home/user/.cabal/lib/hashable-1.2.1.0/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/hashable-1.2.1.0/ghc-7.4.2"], hsLibraries = ["HShashable-1.2.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b",InstalledPackageId "text-0.11.3.1-6cb88d38e009bd49b2a22cdfd8a9f478"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/hashable-1.2.1.0/html/hashable.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/hashable-1.2.1.0/html"]}])]),(PackageName "hashtables",fromList [(Version {versionBranch = [1,1,2,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "hashtables-1.1.2.1-54d9d9d25444aaba39b693b453d0b555", sourcePackageId = PackageIdentifier {pkgName = PackageName "hashtables", pkgVersion = Version {versionBranch = [1,1,2,1], versionTags = []}}, license = BSD3, copyright = "(c) 2011-2013, Google, Inc.", maintainer = "greg@gregorycollins.net", author = "Gregory Collins", stability = "", homepage = "http://github.com/gregorycollins/hashtables", pkgUrl = "", synopsis = "Mutable hash tables in the ST monad", description = "This package provides a couple of different implementations of mutable hash\ntables in the ST monad, as well as a typeclass abstracting their common\noperations, and a set of wrappers to use the hash tables in the IO monad.\n\n/QUICK START/: documentation for the hash table operations is provided in the\n\"Data.HashTable.Class\" module, and the IO wrappers (which most users will\nprobably prefer) are located in the \"Data.HashTable.IO\" module.\n\nThis package currently contains three hash table implementations:\n\n1. \"Data.HashTable.ST.Basic\" contains a basic open-addressing hash table\nusing linear probing as the collision strategy. On a pure speed basis it\nshould currently be the fastest available Haskell hash table\nimplementation for lookups, although it has a higher memory overhead\nthan the other tables and can suffer from long delays when the table is\nresized because all of the elements in the table need to be rehashed.\n\n2. \"Data.HashTable.ST.Cuckoo\" contains an implementation of \\\"cuckoo\nhashing\\\" as introduced by Pagh and Rodler in 2001 (see\n<http://en.wikipedia.org/wiki/Cuckoo_hashing>). Cuckoo hashing has\nworst-case /O(1)/ lookups and can reach a high \\\"load factor\\\", in which\nthe table can perform acceptably well even when more than 90% full.\nRandomized testing shows this implementation of cuckoo hashing to be\nslightly faster on insert and slightly slower on lookup than\n\"Data.Hashtable.ST.Basic\", while being more space efficient by about a\nhalf-word per key-value mapping. Cuckoo hashing, like the basic hash\ntable implementation using linear probing, can suffer from long delays\nwhen the table is resized.\n\n3. \"Data.HashTable.ST.Linear\" contains a linear hash table (see\n<http://en.wikipedia.org/wiki/Linear_hashing>), which trades some insert\nand lookup performance for higher space efficiency and much shorter\ndelays when expanding the table. In most cases, benchmarks show this\ntable to be currently slightly faster than @Data.HashTable@ from the\nHaskell base library.\n\nIt is recommended to create a concrete type alias in your code when using this\npackage, i.e.:\n\n> import qualified Data.HashTable.IO as H\n>\n> type HashTable k v = H.BasicHashTable k v\n>\n> foo :: IO (HashTable Int Int)\n> foo = do\n>     ht <- H.new\n>     H.insert ht 1 1\n>     return ht\n\nFirstly, this makes it easy to switch to a different hash table implementation,\nand secondly, using a concrete type rather than leaving your functions abstract\nin the HashTable class should allow GHC to optimize away the typeclass\ndictionaries.\n\nThis package accepts a couple of different cabal flags:\n\n* @unsafe-tricks@, default /ON/. If this flag is enabled, we use some\nunsafe GHC-specific tricks to save indirections (namely @unsafeCoerce#@\nand @reallyUnsafePtrEquality#@. These techniques rely on assumptions\nabout the behaviour of the GHC runtime system and, although they've been\ntested and should be safe under normal conditions, are slightly\ndangerous. Caveat emptor. In particular, these techniques are\nincompatible with HPC code coverage reports.\n\n* @sse41@, default /OFF/. If this flag is enabled, we use some SSE 4.1\ninstructions (see <http://en.wikipedia.org/wiki/SSE4>, first available on\nIntel Core 2 processors) to speed up cache-line searches for cuckoo\nhashing.\n\n* @bounds-checking@, default /OFF/. If this flag is enabled, array accesses\nare bounds-checked.\n\n* @debug@, default /OFF/. If turned on, we'll rudely spew debug output to\nstdout.\n\n* @portable@, default /OFF/. If this flag is enabled, we use only pure\nHaskell code and try not to use unportable GHC extensions. Turning this\nflag on forces @unsafe-tricks@ and @sse41@ /OFF/.\n\nThis package has been tested with GHC 7.0.3, on:\n\n* a MacBook Pro running Snow Leopard with an Intel Core i5 processor,\nrunning GHC 7.0.3 in 64-bit mode.\n\n* an Arch Linux desktop with an AMD Phenom II X4 940 quad-core processor.\n\n* a MacBook Pro running Snow Leopard with an Intel Core 2 Duo processor,\nrunning GHC 6.12.3 in 32-bit mode.\n\nPlease send bug reports to\n<https://github.com/gregorycollins/hashtables/issues>.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","HashTable","Class"],ModuleName ["Data","HashTable","IO"],ModuleName ["Data","HashTable","ST","Basic"],ModuleName ["Data","HashTable","ST","Cuckoo"],ModuleName ["Data","HashTable","ST","Linear"]], hiddenModules = [ModuleName ["Data","HashTable","Internal","Array"],ModuleName ["Data","HashTable","Internal","IntArray"],ModuleName ["Data","HashTable","Internal","CacheLine"],ModuleName ["Data","HashTable","Internal","CheapPseudoRandomBitStream"],ModuleName ["Data","HashTable","Internal","UnsafeTricks"],ModuleName ["Data","HashTable","Internal","Utils"],ModuleName ["Data","HashTable","Internal","Linear","Bucket"]], trusted = False, importDirs = ["/home/user/.cabal/lib/hashtables-1.1.2.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/hashtables-1.1.2.1/ghc-7.4.2"], hsLibraries = ["HShashtables-1.1.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "hashable-1.2.1.0-4509f214e8f1b5778782a0f03a83ea86",InstalledPackageId "primitive-0.5.0.1-a269ac922313cfdb63da08f8624fba7d",InstalledPackageId "vector-0.10.0.1-fdf8e0c3f3c1cae1113ab97c34aa5c14"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/hashtables-1.1.2.1/html/hashtables.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/hashtables-1.1.2.1/html"]}])]),(PackageName "integer-gmp",fromList [(Version {versionBranch = [0,4,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-gmp", pkgVersion = Version {versionBranch = [0,4,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Integer library based on GMP", description = "This package contains an Integer library based on GMP.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","GMP","Internals"],ModuleName ["GHC","Integer","GMP","Prim"],ModuleName ["GHC","Integer","Logarithms"],ModuleName ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [ModuleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["/usr/lib/ghc/integer-gmp-0.4.0.0"], libraryDirs = ["/usr/lib/ghc/integer-gmp-0.4.0.0"], hsLibraries = ["HSinteger-gmp-0.4.0.0"], extraLibraries = ["gmp"], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/integer-gmp-0.4.0.0/integer-gmp.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/integer-gmp-0.4.0.0"]}])]),(PackageName "mtl",fromList [(Version {versionBranch = [2,1,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56", sourcePackageId = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,1,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Edward Kmett <ekmett@gmail.com>", author = "Andy Gill", stability = "", homepage = "", pkgUrl = "", synopsis = "Monad classes, using functional dependencies", description = "Monad classes using functional dependencies, with instances\nfor various monad transformers, inspired by the paper\n/Functional Programming with Overloading and Higher-Order Polymorphism/,\nby Mark P Jones, in /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Cont"],ModuleName ["Control","Monad","Cont","Class"],ModuleName ["Control","Monad","Error"],ModuleName ["Control","Monad","Error","Class"],ModuleName ["Control","Monad","Identity"],ModuleName ["Control","Monad","List"],ModuleName ["Control","Monad","RWS"],ModuleName ["Control","Monad","RWS","Class"],ModuleName ["Control","Monad","RWS","Lazy"],ModuleName ["Control","Monad","RWS","Strict"],ModuleName ["Control","Monad","Reader"],ModuleName ["Control","Monad","Reader","Class"],ModuleName ["Control","Monad","State"],ModuleName ["Control","Monad","State","Class"],ModuleName ["Control","Monad","State","Lazy"],ModuleName ["Control","Monad","State","Strict"],ModuleName ["Control","Monad","Trans"],ModuleName ["Control","Monad","Writer"],ModuleName ["Control","Monad","Writer","Class"],ModuleName ["Control","Monad","Writer","Lazy"],ModuleName ["Control","Monad","Writer","Strict"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/haskell-packages/ghc/lib/mtl-2.1.1/ghc-7.4.2"], libraryDirs = ["/usr/lib/haskell-packages/ghc/lib/mtl-2.1.1/ghc-7.4.2"], hsLibraries = ["HSmtl-2.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/mtl-2.1.1/mtl.haddock"], haddockHTMLs = ["/usr/share/doc/libghc-mtl-doc/html/"]}])]),(PackageName "network",fromList [(Version {versionBranch = [2,4,2,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f", sourcePackageId = PackageIdentifier {pkgName = PackageName "network", pkgVersion = Version {versionBranch = [2,4,2,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Johan Tibell <johan.tibell@gmail.com>", author = "", stability = "", homepage = "https://github.com/haskell/network", pkgUrl = "", synopsis = "Low-level networking interface", description = "Low-level networking interface", category = "Network", exposed = True, exposedModules = [ModuleName ["Network"],ModuleName ["Network","BSD"],ModuleName ["Network","Socket"],ModuleName ["Network","Socket","ByteString"],ModuleName ["Network","Socket","ByteString","Lazy"],ModuleName ["Network","Socket","Internal"],ModuleName ["Network","URI"]], hiddenModules = [ModuleName ["Network","Socket","ByteString","IOVec"],ModuleName ["Network","Socket","ByteString","MsgHdr"],ModuleName ["Network","Socket","ByteString","Internal"],ModuleName ["Network","Socket","Types"]], trusted = False, importDirs = ["/home/user/.cabal/lib/network-2.4.2.0/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/network-2.4.2.0/ghc-7.4.2"], hsLibraries = ["HSnetwork-2.4.2.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/network-2.4.2.0/ghc-7.4.2/include"], includes = ["HsNet.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "parsec-3.1.3-ac6f0113417a57f9a9728e827832641d",InstalledPackageId "unix-2.6.0.1-3234fad0b5a47a931cafe48ceb6885f5"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/network-2.4.2.0/html/network.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/network-2.4.2.0/html"]}])]),(PackageName "network-multicast",fromList [(Version {versionBranch = [0,0,10], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "network-multicast-0.0.10-13b11fc14bfffd94b4a080772634d41c", sourcePackageId = PackageIdentifier {pkgName = PackageName "network-multicast", pkgVersion = Version {versionBranch = [0,0,10], versionTags = []}}, license = PublicDomain, copyright = "2008-2013 Audrey Tang", maintainer = "Audrey Tang <audreyt@audreyt.org>", author = "Audrey Tang <audreyt@audreyt.org>", stability = "experimental", homepage = "", pkgUrl = "", synopsis = "Simple multicast library", description = "The \"Network.Multicast\" module is for sending\nUDP datagrams over multicast (class D) addresses.", category = "Network", exposed = True, exposedModules = [ModuleName ["Network","Multicast"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/network-multicast-0.0.10/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/network-multicast-0.0.10/ghc-7.4.2"], hsLibraries = ["HSnetwork-multicast-0.0.10"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/network-multicast-0.0.10/html/network-multicast.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/network-multicast-0.0.10/html"]}])]),(PackageName "network-transport",fromList [(Version {versionBranch = [0,3,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "network-transport-0.3.0.1-41710340d3a945a886d57381e8ad6563", sourcePackageId = PackageIdentifier {pkgName = PackageName "network-transport", pkgVersion = Version {versionBranch = [0,3,0,1], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "edsko@well-typed.com, duncan@well-typed.com", author = "Duncan Coutts, Nicolas Wu, Edsko de Vries", stability = "experimental", homepage = "http://github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "Network abstraction layer", description = "\"Network.Transport\" is a Network Abstraction Layer which provides\nthe following high-level concepts:\n\n* Nodes in the network are represented by 'EndPoint's. These are\nheavyweight stateful objects.\n\n* Each 'EndPoint' has an 'EndPointAddress'.\n\n* Connections can be established from one 'EndPoint' to another\nusing the 'EndPointAddress' of the remote end.\n\n* The 'EndPointAddress' can be serialised and sent over the\nnetwork, where as 'EndPoint's and connections cannot.\n\n* Connections between 'EndPoint's are unidirectional and lightweight.\n\n* Outgoing messages are sent via a 'Connection' object that\nrepresents the sending end of the connection.\n\n* Incoming messages for /all/ of the incoming connections on\nan 'EndPoint' are collected via a shared receive queue.\n\n* In addition to incoming messages, 'EndPoint's are notified of\nother 'Event's such as new connections or broken connections.\n\nThis design was heavily influenced by the design of the Common\nCommunication Interface\n(<http://www.olcf.ornl.gov/center-projects/common-communication-interface>).\nImportant design goals are:\n\n* Connections should be lightweight: it should be no problem to\ncreate thousands of connections between endpoints.\n\n* Error handling is explicit: every function declares as part of\nits type which errors it can return (no exceptions are thrown)\n\n* Error handling is \"abstract\": errors that originate from\nimplementation specific problems (such as \"no more sockets\" in\nthe TCP implementation) get mapped to generic errors\n(\"insufficient resources\") at the Transport level.\n\nThis package provides the generic interface only; you will\nprobably also want to install at least one transport\nimplementation (network-transport-*).", category = "Network", exposed = True, exposedModules = [ModuleName ["Network","Transport"],ModuleName ["Network","Transport","Util"],ModuleName ["Network","Transport","Internal"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/network-transport-0.3.0.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/network-transport-0.3.0.1/ghc-7.4.2"], hsLibraries = ["HSnetwork-transport-0.3.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/network-transport-0.3.0.1/html/network-transport.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/network-transport-0.3.0.1/html"]}])]),(PackageName "network-transport-tcp",fromList [(Version {versionBranch = [0,3,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "network-transport-tcp-0.3.1-458e2b8d81cd675be9f64ae0bfadb686", sourcePackageId = PackageIdentifier {pkgName = PackageName "network-transport-tcp", pkgVersion = Version {versionBranch = [0,3,1], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "edsko@well-typed.com, dcoutts@well-typed.com", author = "Duncan Coutts, Nicolas Wu, Edsko de Vries", stability = "experimental", homepage = "http://github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "TCP instantiation of Network.Transport", description = "TCP instantiation of Network.Transport", category = "Network", exposed = True, exposedModules = [ModuleName ["Network","Transport","TCP"],ModuleName ["Network","Transport","TCP","Internal"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/network-transport-tcp-0.3.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/network-transport-tcp-0.3.1/ghc-7.4.2"], hsLibraries = ["HSnetwork-transport-tcp-0.3.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "data-accessor-0.2.2.3-77dcf8c6bef4384c6026111048bdd11d",InstalledPackageId "network-2.4.2.0-6fc3eba32f89334f3ad39f8cacd6cf8f",InstalledPackageId "network-transport-0.3.0.1-41710340d3a945a886d57381e8ad6563"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/network-transport-tcp-0.3.1/html/network-transport-tcp.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/network-transport-tcp-0.3.1/html"]}])]),(PackageName "old-locale",fromList [(Version {versionBranch = [1,0,0,4], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "old-locale-1.0.0.4-b1d945ebea59a524cba400a524cb40aa", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "locale library", description = "This package provides the old locale library.\nFor new code, the new locale library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Locale"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/old-locale-1.0.0.4"], libraryDirs = ["/usr/lib/ghc/old-locale-1.0.0.4"], hsLibraries = ["HSold-locale-1.0.0.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/old-locale-1.0.0.4/old-locale.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/old-locale-1.0.0.4"]}])]),(PackageName "old-time",fromList [(Version {versionBranch = [1,1,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "old-time-1.1.0.0-3e0f7b48d6c1d1415ad852e23725fdc1", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Time library", description = "This package provides the old time library.\nFor new code, the new time library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Time"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/old-time-1.1.0.0"], libraryDirs = ["/usr/lib/ghc/old-time-1.1.0.0"], hsLibraries = ["HSold-time-1.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/lib/ghc/old-time-1.1.0.0/include"], includes = ["HsTime.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "old-locale-1.0.0.4-b1d945ebea59a524cba400a524cb40aa"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/old-time-1.1.0.0/old-time.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/old-time-1.1.0.0"]}])]),(PackageName "parsec",fromList [(Version {versionBranch = [3,1,3], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "parsec-3.1.3-ac6f0113417a57f9a9728e827832641d", sourcePackageId = PackageIdentifier {pkgName = PackageName "parsec", pkgVersion = Version {versionBranch = [3,1,3], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Antoine Latter <aslatter@gmail.com>", author = "Daan Leijen <daan@microsoft.com>, Paolo Martini <paolo@nemail.it>", stability = "", homepage = "http://www.cs.uu.nl/~daan/parsec.html", pkgUrl = "", synopsis = "Monadic parser combinators", description = "Parsec is designed from scratch as an industrial-strength parser\nlibrary.  It is simple, safe, well documented (on the package\nhomepage), has extensive libraries and good error messages,\nand is also fast.  It is defined as a monad transformer that can be\nstacked on arbitrary monads, and it is also parametric in the\ninput stream type.", category = "Parsing", exposed = True, exposedModules = [ModuleName ["Text","Parsec"],ModuleName ["Text","Parsec","String"],ModuleName ["Text","Parsec","ByteString"],ModuleName ["Text","Parsec","ByteString","Lazy"],ModuleName ["Text","Parsec","Text"],ModuleName ["Text","Parsec","Text","Lazy"],ModuleName ["Text","Parsec","Pos"],ModuleName ["Text","Parsec","Error"],ModuleName ["Text","Parsec","Prim"],ModuleName ["Text","Parsec","Char"],ModuleName ["Text","Parsec","Combinator"],ModuleName ["Text","Parsec","Token"],ModuleName ["Text","Parsec","Expr"],ModuleName ["Text","Parsec","Language"],ModuleName ["Text","Parsec","Perm"],ModuleName ["Text","ParserCombinators","Parsec"],ModuleName ["Text","ParserCombinators","Parsec","Char"],ModuleName ["Text","ParserCombinators","Parsec","Combinator"],ModuleName ["Text","ParserCombinators","Parsec","Error"],ModuleName ["Text","ParserCombinators","Parsec","Expr"],ModuleName ["Text","ParserCombinators","Parsec","Language"],ModuleName ["Text","ParserCombinators","Parsec","Perm"],ModuleName ["Text","ParserCombinators","Parsec","Pos"],ModuleName ["Text","ParserCombinators","Parsec","Prim"],ModuleName ["Text","ParserCombinators","Parsec","Token"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/parsec-3.1.3/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/parsec-3.1.3/ghc-7.4.2"], hsLibraries = ["HSparsec-3.1.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "mtl-2.1.1-ac381587dfb07ed7496d96b5be6faa56",InstalledPackageId "text-0.11.3.1-6cb88d38e009bd49b2a22cdfd8a9f478"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/parsec-3.1.3/html/parsec.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/parsec-3.1.3/html"]}])]),(PackageName "pretty",fromList [(Version {versionBranch = [1,1,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "pretty-1.1.1.0-867dcdeb02592f3d2a707618561c7b86", sourcePackageId = PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,1,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "David Terei <dave.terei@gmail.com>", author = "", stability = "Stable", homepage = "http://github.com/haskell/pretty", pkgUrl = "", synopsis = "Pretty-printing library", description = "This package contains a pretty-printing library, a set of API's\nthat provides a way to easily print out text in a consistent\nformat of your choosing. This is useful for compilers and related\ntools.\n\nThis library was originally designed by John Hughes's and has since\nbeen heavily modified by Simon Peyton Jones.", category = "Text", exposed = True, exposedModules = [ModuleName ["Text","PrettyPrint"],ModuleName ["Text","PrettyPrint","HughesPJ"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/pretty-1.1.1.0"], libraryDirs = ["/usr/lib/ghc/pretty-1.1.1.0"], hsLibraries = ["HSpretty-1.1.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/pretty-1.1.1.0/pretty.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/pretty-1.1.1.0"]}])]),(PackageName "primitive",fromList [(Version {versionBranch = [0,5,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "primitive-0.5.0.1-a269ac922313cfdb63da08f8624fba7d", sourcePackageId = PackageIdentifier {pkgName = PackageName "primitive", pkgVersion = Version {versionBranch = [0,5,0,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2009-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "http://code.haskell.org/primitive", pkgUrl = "", synopsis = "Primitive memory-related operations", description = "\nThis package provides various primitive memory-related operations.\n\nChanges in version 0.5.0.1\n\n* Disable array copying primitives for GHC 7.6.* and earlier\n\nChanges in version 0.5\n\n* New in \"Data.Primitive.MutVar\": @atomicModifyMutVar@\n\n* Efficient block fill operations: @setByteArray@, @setAddr@\n", category = "Data", exposed = True, exposedModules = [ModuleName ["Control","Monad","Primitive"],ModuleName ["Data","Primitive"],ModuleName ["Data","Primitive","MachDeps"],ModuleName ["Data","Primitive","Types"],ModuleName ["Data","Primitive","Array"],ModuleName ["Data","Primitive","ByteArray"],ModuleName ["Data","Primitive","Addr"],ModuleName ["Data","Primitive","MutVar"]], hiddenModules = [ModuleName ["Data","Primitive","Internal","Compat"],ModuleName ["Data","Primitive","Internal","Operations"]], trusted = False, importDirs = ["/home/user/.cabal/lib/primitive-0.5.0.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/primitive-0.5.0.1/ghc-7.4.2"], hsLibraries = ["HSprimitive-0.5.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/primitive-0.5.0.1/ghc-7.4.2/include"], includes = ["primitive-memops.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/primitive-0.5.0.1/html/primitive.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/primitive-0.5.0.1/html"]}])]),(PackageName "random",fromList [(Version {versionBranch = [1,0,1,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "random-1.0.1.1-5bcf17e975ad42d3244dd9f6f76c56ce", sourcePackageId = PackageIdentifier {pkgName = PackageName "random", pkgVersion = Version {versionBranch = [1,0,1,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "rrnewton@gmail.com", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "random number library", description = "This package provides a basic random number generation\nlibrary, including the ability to split random number\ngenerators.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Random"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/haskell-packages/ghc/lib/random-1.0.1.1/ghc-7.4.2"], libraryDirs = ["/usr/lib/haskell-packages/ghc/lib/random-1.0.1.1/ghc-7.4.2"], hsLibraries = ["HSrandom-1.0.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/random-1.0.1.1/random.haddock"], haddockHTMLs = ["/usr/share/doc/libghc-random-doc/html/"]}])]),(PackageName "rank1dynamic",fromList [(Version {versionBranch = [0,1,0,2], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "rank1dynamic-0.1.0.2-1405d177a2b2ff21e91f6132e427d1d6", sourcePackageId = PackageIdentifier {pkgName = PackageName "rank1dynamic", pkgVersion = Version {versionBranch = [0,1,0,2], versionTags = []}}, license = BSD3, copyright = "Well-Typed LLP", maintainer = "edsko@well-typed.com", author = "Edsko de Vries", stability = "", homepage = "http://github.com/haskell-distributed/distributed-process", pkgUrl = "", synopsis = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types", description = "\"Data.Typeable\" and \"Data.Dynamic\" only support monomorphic types.\nIn this package we provide similar functionality but with\nsupport for rank-1 polymorphic types.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Rank1Dynamic"],ModuleName ["Data","Rank1Typeable"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/rank1dynamic-0.1.0.2/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/rank1dynamic-0.1.0.2/ghc-7.4.2"], hsLibraries = ["HSrank1dynamic-0.1.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "binary-0.6.4.0-2a10d2f52cf136c256dbbfdd47a5922b",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/rank1dynamic-0.1.0.2/html/rank1dynamic.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/rank1dynamic-0.1.0.2/html"]}])]),(PackageName "rts",fromList [(Version {versionBranch = [1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "builtin_rts", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], trusted = False, importDirs = [], libraryDirs = ["/usr/lib/ghc"], hsLibraries = ["HSrts"], extraLibraries = ["ffi","m","rt","dl"], extraGHCiLibraries = [], includeDirs = ["/usr/lib/ghc/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-u","ghczmprim_GHCziTypes_Izh_static_info","-u","ghczmprim_GHCziTypes_Czh_static_info","-u","ghczmprim_GHCziTypes_Fzh_static_info","-u","ghczmprim_GHCziTypes_Dzh_static_info","-u","base_GHCziPtr_Ptr_static_info","-u","base_GHCziWord_Wzh_static_info","-u","base_GHCziInt_I8zh_static_info","-u","base_GHCziInt_I16zh_static_info","-u","base_GHCziInt_I32zh_static_info","-u","base_GHCziInt_I64zh_static_info","-u","base_GHCziWord_W8zh_static_info","-u","base_GHCziWord_W16zh_static_info","-u","base_GHCziWord_W32zh_static_info","-u","base_GHCziWord_W64zh_static_info","-u","base_GHCziStable_StablePtr_static_info","-u","ghczmprim_GHCziTypes_Izh_con_info","-u","ghczmprim_GHCziTypes_Czh_con_info","-u","ghczmprim_GHCziTypes_Fzh_con_info","-u","ghczmprim_GHCziTypes_Dzh_con_info","-u","base_GHCziPtr_Ptr_con_info","-u","base_GHCziPtr_FunPtr_con_info","-u","base_GHCziStable_StablePtr_con_info","-u","ghczmprim_GHCziTypes_False_closure","-u","ghczmprim_GHCziTypes_True_closure","-u","base_GHCziPack_unpackCString_closure","-u","base_GHCziIOziException_stackOverflow_closure","-u","base_GHCziIOziException_heapOverflow_closure","-u","base_ControlziExceptionziBase_nonTermination_closure","-u","base_GHCziIOziException_blockedIndefinitelyOnMVar_closure","-u","base_GHCziIOziException_blockedIndefinitelyOnSTM_closure","-u","base_ControlziExceptionziBase_nestedAtomically_closure","-u","base_GHCziWeak_runFinalizzerBatch_closure","-u","base_GHCziTopHandler_flushStdHandles_closure","-u","base_GHCziTopHandler_runIO_closure","-u","base_GHCziTopHandler_runNonIO_closure","-u","base_GHCziConcziIO_ensureIOManagerIsRunning_closure","-u","base_GHCziConcziSync_runSparks_closure","-u","base_GHCziConcziSignal_runHandlers_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}])]),(PackageName "stm",fromList [(Version {versionBranch = [2,4,2], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "stm-2.4.2-d550d34d578e50fdc7939a26f6b74fe8", sourcePackageId = PackageIdentifier {pkgName = PackageName "stm", pkgVersion = Version {versionBranch = [2,4,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Software Transactional Memory", description = "A modular composable concurrency abstraction.\n\nChanges in version 2.4.2\n\n* Added \"Control.Concurrent.STM.TSem\" (transactional semaphore)\n\nChanges in version 2.4.1\n\n* Added Applicative/Alternative instances of STM for GHC <7.0\n\nChanges in version 2.4\n\n* Added \"Control.Concurrent.STM.TQueue\" (a faster @TChan@)\n\n* Added \"Control.Concurrent.STM.TBQueue\" (a bounded channel based on @TQueue@)\n\n* @TChan@ has an @Eq@ instances\n\n* Added @newBroadcastTChan@ and @newBroadcastTChanIO@\n\n* Some performance improvements for @TChan@\n\n* Added @cloneTChan@", category = "Concurrency", exposed = True, exposedModules = [ModuleName ["Control","Concurrent","STM"],ModuleName ["Control","Concurrent","STM","TArray"],ModuleName ["Control","Concurrent","STM","TVar"],ModuleName ["Control","Concurrent","STM","TChan"],ModuleName ["Control","Concurrent","STM","TMVar"],ModuleName ["Control","Concurrent","STM","TQueue"],ModuleName ["Control","Concurrent","STM","TBQueue"],ModuleName ["Control","Concurrent","STM","TSem"],ModuleName ["Control","Monad","STM"]], hiddenModules = [ModuleName ["Control","Sequential","STM"]], trusted = False, importDirs = ["/home/user/.cabal/lib/stm-2.4.2/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/stm-2.4.2/ghc-7.4.2"], hsLibraries = ["HSstm-2.4.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/stm-2.4.2/html/stm.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/stm-2.4.2/html"]}])]),(PackageName "syb",fromList [(Version {versionBranch = [0,3,6,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "syb-0.3.6.1-7e3d2ec5339017845f3db814d70b7bc5", sourcePackageId = PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,3,6,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "generics@haskell.org", author = "Ralf Lammel, Simon Peyton Jones, Jose Pedro Magalhaes", stability = "provisional", homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB", pkgUrl = "", synopsis = "Scrap Your Boilerplate", description = "This package contains the generics system described in the\n/Scrap Your Boilerplate/ papers (see\n<http://www.cs.uu.nl/wiki/GenericProgramming/SYB>).\nIt defines the @Data@ class of types permitting folding and unfolding\nof constructor applications, instances of this class for primitive\ntypes, and a variety of traversals.", category = "Generics", exposed = True, exposedModules = [ModuleName ["Data","Generics"],ModuleName ["Data","Generics","Basics"],ModuleName ["Data","Generics","Instances"],ModuleName ["Data","Generics","Aliases"],ModuleName ["Data","Generics","Schemes"],ModuleName ["Data","Generics","Text"],ModuleName ["Data","Generics","Twins"],ModuleName ["Data","Generics","Builders"],ModuleName ["Generics","SYB"],ModuleName ["Generics","SYB","Basics"],ModuleName ["Generics","SYB","Instances"],ModuleName ["Generics","SYB","Aliases"],ModuleName ["Generics","SYB","Schemes"],ModuleName ["Generics","SYB","Text"],ModuleName ["Generics","SYB","Twins"],ModuleName ["Generics","SYB","Builders"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/haskell-packages/ghc/lib/syb-0.3.6.1/ghc-7.4.2"], libraryDirs = ["/usr/lib/haskell-packages/ghc/lib/syb-0.3.6.1/ghc-7.4.2"], hsLibraries = ["HSsyb-0.3.6.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/syb-0.3.6.1/syb.haddock"], haddockHTMLs = ["/usr/share/doc/libghc-syb-doc/html/"]}])]),(PackageName "template-haskell",fromList [(Version {versionBranch = [2,7,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "template-haskell-2.7.0.0-718c7a8346a48b195831957f3dba0eac", sourcePackageId = PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,7,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "Facilities for manipulating Haskell source code using Template Haskell.", category = "", exposed = True, exposedModules = [ModuleName ["Language","Haskell","TH","Syntax","Internals"],ModuleName ["Language","Haskell","TH","Syntax"],ModuleName ["Language","Haskell","TH","PprLib"],ModuleName ["Language","Haskell","TH","Ppr"],ModuleName ["Language","Haskell","TH","Lib"],ModuleName ["Language","Haskell","TH","Quote"],ModuleName ["Language","Haskell","TH"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/ghc/template-haskell-2.7.0.0"], libraryDirs = ["/usr/lib/ghc/template-haskell-2.7.0.0"], hsLibraries = ["HStemplate-haskell-2.7.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "containers-0.4.2.1-efa59805336a77490296ae3897cecb87",InstalledPackageId "pretty-1.1.1.0-867dcdeb02592f3d2a707618561c7b86"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/template-haskell-2.7.0.0/template-haskell.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/template-haskell-2.7.0.0"]}])]),(PackageName "text",fromList [(Version {versionBranch = [0,11,3,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "text-0.11.3.1-6cb88d38e009bd49b2a22cdfd8a9f478", sourcePackageId = PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [0,11,3,1], versionTags = []}}, license = BSD3, copyright = "2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Bryan O'Sullivan <bos@serpentine.com>", stability = "", homepage = "https://github.com/bos/text", pkgUrl = "", synopsis = "An efficient packed Unicode text type.", description = "\nAn efficient packed, immutable Unicode text type (both strict and\nlazy), with a powerful loop fusion optimization framework.\n\nThe 'Text' type represents Unicode character strings, in a time and\nspace-efficient manner. This package provides text processing\ncapabilities that are optimized for performance critical use, both\nin terms of large data quantities and high speed.\n\nThe 'Text' type provides character-encoding, type-safe case\nconversion via whole-string case conversion functions. It also\nprovides a range of functions for converting 'Text' values to and from\n'ByteStrings', using several standard encodings.\n\nEfficient locale-sensitive support for text IO is also supported.\n\nThese modules are intended to be imported qualified, to avoid name\nclashes with Prelude functions, e.g.\n\n> import qualified Data.Text as T\n\nTo use an extended and very rich family of functions for working\nwith Unicode text (including normalization, regular expressions,\nnon-standard encodings, text breaking, and locales), see\nthe @text-icu@ package:\n<http://hackage.haskell.org/package/text-icu>\n\n&#8212;&#8212; RELEASE NOTES &#8212;&#8212;\n\nChanges in 0.11.2.0:\n\n* String literals are now converted directly from the format in\nwhich GHC stores them into 'Text', without an intermediate\ntransformation through 'String', and without inlining of\nconversion code at each site where a string literal is declared.\n", category = "Data, Text", exposed = True, exposedModules = [ModuleName ["Data","Text"],ModuleName ["Data","Text","Array"],ModuleName ["Data","Text","Encoding"],ModuleName ["Data","Text","Encoding","Error"],ModuleName ["Data","Text","Foreign"],ModuleName ["Data","Text","IO"],ModuleName ["Data","Text","Internal"],ModuleName ["Data","Text","Lazy"],ModuleName ["Data","Text","Lazy","Builder"],ModuleName ["Data","Text","Lazy","Builder","Int"],ModuleName ["Data","Text","Lazy","Builder","RealFloat"],ModuleName ["Data","Text","Lazy","Encoding"],ModuleName ["Data","Text","Lazy","IO"],ModuleName ["Data","Text","Lazy","Internal"],ModuleName ["Data","Text","Lazy","Read"],ModuleName ["Data","Text","Read"],ModuleName ["Data","Text","Unsafe"]], hiddenModules = [ModuleName ["Data","Text","Encoding","Fusion"],ModuleName ["Data","Text","Encoding","Fusion","Common"],ModuleName ["Data","Text","Encoding","Utf16"],ModuleName ["Data","Text","Encoding","Utf32"],ModuleName ["Data","Text","Encoding","Utf8"],ModuleName ["Data","Text","Fusion"],ModuleName ["Data","Text","Fusion","CaseMapping"],ModuleName ["Data","Text","Fusion","Common"],ModuleName ["Data","Text","Fusion","Internal"],ModuleName ["Data","Text","Fusion","Size"],ModuleName ["Data","Text","IO","Internal"],ModuleName ["Data","Text","Lazy","Builder","Functions"],ModuleName ["Data","Text","Lazy","Builder","Int","Digits"],ModuleName ["Data","Text","Lazy","Builder","Internal"],ModuleName ["Data","Text","Lazy","Builder","RealFloat","Functions"],ModuleName ["Data","Text","Lazy","Encoding","Fusion"],ModuleName ["Data","Text","Lazy","Fusion"],ModuleName ["Data","Text","Lazy","Search"],ModuleName ["Data","Text","Private"],ModuleName ["Data","Text","Search"],ModuleName ["Data","Text","Unsafe","Base"],ModuleName ["Data","Text","UnsafeChar"],ModuleName ["Data","Text","UnsafeShift"],ModuleName ["Data","Text","Util"]], trusted = False, importDirs = ["/home/user/.cabal/lib/text-0.11.3.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/text-0.11.3.1/ghc-7.4.2"], hsLibraries = ["HStext-0.11.3.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.0-4f6c2a594155b0b953c1cf0f54040f61",InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "integer-gmp-0.4.0.0-c15e185526893c3119f809251aac8c5b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/text-0.11.3.1/html/text.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/text-0.11.3.1/html"]}])]),(PackageName "time",fromList [(Version {versionBranch = [1,4], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52", sourcePackageId = PackageIdentifier {pkgName = PackageName "time", pkgVersion = Version {versionBranch = [1,4], versionTags = []}}, license = BSD3, copyright = "", maintainer = "<ashley@semantic.org>", author = "Ashley Yakeley", stability = "stable", homepage = "http://semantic.org/TimeLib/", pkgUrl = "", synopsis = "A time library", description = "A time library", category = "System", exposed = True, exposedModules = [ModuleName ["Data","Time","Calendar"],ModuleName ["Data","Time","Calendar","MonthDay"],ModuleName ["Data","Time","Calendar","OrdinalDate"],ModuleName ["Data","Time","Calendar","WeekDate"],ModuleName ["Data","Time","Calendar","Julian"],ModuleName ["Data","Time","Calendar","Easter"],ModuleName ["Data","Time","Clock"],ModuleName ["Data","Time","Clock","POSIX"],ModuleName ["Data","Time","Clock","TAI"],ModuleName ["Data","Time","LocalTime"],ModuleName ["Data","Time","Format"],ModuleName ["Data","Time"]], hiddenModules = [ModuleName ["Data","Time","Calendar","Private"],ModuleName ["Data","Time","Calendar","Days"],ModuleName ["Data","Time","Calendar","Gregorian"],ModuleName ["Data","Time","Calendar","JulianYearDay"],ModuleName ["Data","Time","Clock","Scale"],ModuleName ["Data","Time","Clock","UTC"],ModuleName ["Data","Time","Clock","CTimeval"],ModuleName ["Data","Time","Clock","UTCDiff"],ModuleName ["Data","Time","LocalTime","TimeZone"],ModuleName ["Data","Time","LocalTime","TimeOfDay"],ModuleName ["Data","Time","LocalTime","LocalTime"],ModuleName ["Data","Time","Format","Parse"]], trusted = False, importDirs = ["/usr/lib/ghc/time-1.4"], libraryDirs = ["/usr/lib/ghc/time-1.4"], hsLibraries = ["HStime-1.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/lib/ghc/time-1.4/include"], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed",InstalledPackageId "old-locale-1.0.0.4-b1d945ebea59a524cba400a524cb40aa"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/time-1.4/time.haddock"], haddockHTMLs = ["/usr/share/doc/ghc-doc/html/libraries/time-1.4"]}])]),(PackageName "transformers",fromList [(Version {versionBranch = [0,3,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "transformers-0.3.0.0-2889ebed7e61112cda7ded5e4c153bcf", sourcePackageId = PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Ross Paterson <ross@soi.city.ac.uk>", author = "Andy Gill, Ross Paterson", stability = "", homepage = "", pkgUrl = "", synopsis = "Concrete functor and monad transformers", description = "A portable library of functor and monad transformers, inspired by\nthe paper \\\"Functional Programming with Overloading and Higher-Order\nPolymorphism\\\", by Mark P Jones,\nin /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).\n\nThis package contains:\n\n* the monad transformer class (in \"Control.Monad.Trans.Class\")\n\n* concrete functor and monad transformers, each with associated\noperations and functions to lift operations associated with other\ntransformers.\n\nIt can be used on its own in portable Haskell code, or with the monad\nclasses in the @mtl@ or @monads-tf@ packages, which automatically\nlift operations introduced by monad transformers through other\ntransformers.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Applicative","Backwards"],ModuleName ["Control","Applicative","Lift"],ModuleName ["Control","Monad","IO","Class"],ModuleName ["Control","Monad","Trans","Class"],ModuleName ["Control","Monad","Trans","Cont"],ModuleName ["Control","Monad","Trans","Error"],ModuleName ["Control","Monad","Trans","Identity"],ModuleName ["Control","Monad","Trans","List"],ModuleName ["Control","Monad","Trans","Maybe"],ModuleName ["Control","Monad","Trans","Reader"],ModuleName ["Control","Monad","Trans","RWS"],ModuleName ["Control","Monad","Trans","RWS","Lazy"],ModuleName ["Control","Monad","Trans","RWS","Strict"],ModuleName ["Control","Monad","Trans","State"],ModuleName ["Control","Monad","Trans","State","Lazy"],ModuleName ["Control","Monad","Trans","State","Strict"],ModuleName ["Control","Monad","Trans","Writer"],ModuleName ["Control","Monad","Trans","Writer","Lazy"],ModuleName ["Control","Monad","Trans","Writer","Strict"],ModuleName ["Data","Functor","Compose"],ModuleName ["Data","Functor","Constant"],ModuleName ["Data","Functor","Identity"],ModuleName ["Data","Functor","Product"],ModuleName ["Data","Functor","Reverse"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib/haskell-packages/ghc/lib/transformers-0.3.0.0/ghc-7.4.2"], libraryDirs = ["/usr/lib/haskell-packages/ghc/lib/transformers-0.3.0.0/ghc-7.4.2"], hsLibraries = ["HStransformers-0.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/lib/ghc-doc/haddock/transformers-0.3.0.0/transformers.haddock"], haddockHTMLs = ["/usr/share/doc/libghc-transformers-doc/html/"]}])]),(PackageName "unix",fromList [(Version {versionBranch = [2,6,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "unix-2.6.0.1-3234fad0b5a47a931cafe48ceb6885f5", sourcePackageId = PackageIdentifier {pkgName = PackageName "unix", pkgVersion = Version {versionBranch = [2,6,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "POSIX functionality", description = "This package gives you access to the set of operating system\nservices standardised by POSIX 1003.1b (or the IEEE Portable\nOperating System Interface for Computing Environments -\nIEEE Std. 1003.1).\n\nThe package is not supported under Windows (except under Cygwin).", category = "System", exposed = True, exposedModules = [ModuleName ["System","Posix"],ModuleName ["System","Posix","ByteString"],ModuleName ["System","Posix","Error"],ModuleName ["System","Posix","Resource"],ModuleName ["System","Posix","Time"],ModuleName ["System","Posix","Unistd"],ModuleName ["System","Posix","User"],ModuleName ["System","Posix","Signals"],ModuleName ["System","Posix","Signals","Exts"],ModuleName ["System","Posix","Semaphore"],ModuleName ["System","Posix","SharedMem"],ModuleName ["System","Posix","ByteString","FilePath"],ModuleName ["System","Posix","Directory"],ModuleName ["System","Posix","Directory","ByteString"],ModuleName ["System","Posix","DynamicLinker","Module"],ModuleName ["System","Posix","DynamicLinker","Module","ByteString"],ModuleName ["System","Posix","DynamicLinker","Prim"],ModuleName ["System","Posix","DynamicLinker","ByteString"],ModuleName ["System","Posix","DynamicLinker"],ModuleName ["System","Posix","Files"],ModuleName ["System","Posix","Files","ByteString"],ModuleName ["System","Posix","IO"],ModuleName ["System","Posix","IO","ByteString"],ModuleName ["System","Posix","Env"],ModuleName ["System","Posix","Env","ByteString"],ModuleName ["System","Posix","Process"],ModuleName ["System","Posix","Process","Internals"],ModuleName ["System","Posix","Process","ByteString"],ModuleName ["System","Posix","Temp"],ModuleName ["System","Posix","Temp","ByteString"],ModuleName ["System","Posix","Terminal"],ModuleName ["System","Posix","Terminal","ByteString"]], hiddenModules = [ModuleName ["System","Posix","Directory","Common"],ModuleName ["System","Posix","DynamicLinker","Common"],ModuleName ["System","Posix","Files","Common"],ModuleName ["System","Posix","IO","Common"],ModuleName ["System","Posix","Process","Common"],ModuleName ["System","Posix","Terminal","Common"]], trusted = False, importDirs = ["/home/user/.cabal/lib/unix-2.6.0.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/unix-2.6.0.1/ghc-7.4.2"], hsLibraries = ["HSunix-2.6.0.1"], extraLibraries = ["rt","util","dl","pthread"], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/unix-2.6.0.1/ghc-7.4.2/include"], includes = ["HsUnix.h","execvpe.h"], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "bytestring-0.10.4.0-db03c203cd1eb30cd1d8c555c97aa5f1",InstalledPackageId "time-1.4-b8e1c3d423daa1e2c5470a82caf23b52"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/unix-2.6.0.1/html/unix.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/unix-2.6.0.1/html"]}])]),(PackageName "vector",fromList [(Version {versionBranch = [0,10,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "vector-0.10.0.1-fdf8e0c3f3c1cae1113ab97c34aa5c14", sourcePackageId = PackageIdentifier {pkgName = PackageName "vector", pkgVersion = Version {versionBranch = [0,10,0,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2008-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "http://code.haskell.org/vector", pkgUrl = "", synopsis = "Efficient Arrays", description = "\nAn efficient implementation of Int-indexed arrays (both mutable\nand immutable), with a powerful loop optimisation framework .\n\nIt is structured as follows:\n\n[\"Data.Vector\"] Boxed vectors of arbitrary types.\n\n[\"Data.Vector.Unboxed\"] Unboxed vectors with an adaptive\nrepresentation based on data type families.\n\n[\"Data.Vector.Storable\"] Unboxed vectors of 'Storable' types.\n\n[\"Data.Vector.Primitive\"] Unboxed vectors of primitive types as\ndefined by the @primitive@ package. \"Data.Vector.Unboxed\" is more\nflexible at no performance cost.\n\n[\"Data.Vector.Generic\"] Generic interface to the vector types.\n\nThere is also a (draft) tutorial on common uses of vector.\n\n* <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>\n\nPlease use the project trac to submit bug reports and feature\nrequests.\n\n* <http://trac.haskell.org/vector>\n\nChanges in version 0.10.0.1\n\n* Require @primitive@ to include workaround for a GHC array copying bug\n\nChanges in version 0.10\n\n* @NFData@ instances\n\n* More efficient block fills\n\n* Safe Haskell support removed\n", category = "Data, Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Vector","Internal","Check"],ModuleName ["Data","Vector","Fusion","Util"],ModuleName ["Data","Vector","Fusion","Stream","Size"],ModuleName ["Data","Vector","Fusion","Stream","Monadic"],ModuleName ["Data","Vector","Fusion","Stream"],ModuleName ["Data","Vector","Generic","Mutable"],ModuleName ["Data","Vector","Generic","Base"],ModuleName ["Data","Vector","Generic","New"],ModuleName ["Data","Vector","Generic"],ModuleName ["Data","Vector","Primitive","Mutable"],ModuleName ["Data","Vector","Primitive"],ModuleName ["Data","Vector","Storable","Internal"],ModuleName ["Data","Vector","Storable","Mutable"],ModuleName ["Data","Vector","Storable"],ModuleName ["Data","Vector","Unboxed","Base"],ModuleName ["Data","Vector","Unboxed","Mutable"],ModuleName ["Data","Vector","Unboxed"],ModuleName ["Data","Vector","Mutable"],ModuleName ["Data","Vector"]], hiddenModules = [], trusted = False, importDirs = ["/home/user/.cabal/lib/vector-0.10.0.1/ghc-7.4.2"], libraryDirs = ["/home/user/.cabal/lib/vector-0.10.0.1/ghc-7.4.2"], hsLibraries = ["HSvector-0.10.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/user/.cabal/lib/vector-0.10.0.1/ghc-7.4.2/include"], includes = [], depends = [InstalledPackageId "base-4.5.1.0-6909ea031307e047b8ba5b23968c534b",InstalledPackageId "deepseq-1.3.0.0-c8a9e8b538aecb7581533b9c1d19faed",InstalledPackageId "ghc-prim-0.2.0.0-23f345e1ec26a64d5ebc768bd0b2a5d9",InstalledPackageId "primitive-0.5.0.1-a269ac922313cfdb63da08f8624fba7d"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/user/.cabal/share/doc/vector-0.10.0.1/html/vector.haddock"], haddockHTMLs = ["/home/user/.cabal/share/doc/vector-0.10.0.1/html"]}])])]), pkgDescrFile = Just "./CloudSync.cabal", localPkgDescr = PackageDescription {package = PackageIdentifier {pkgName = PackageName "CloudSync", pkgVersion = Version {versionBranch = [0,0,1], versionTags = []}}, license = AllRightsReserved, licenseFile = "", copyright = "", maintainer = "", author = "", stability = "", testedWith = [], homepage = "syb", pkgUrl = "", bugReports = "", sourceRepos = [], synopsis = "Sync data in the cloud using event sourcing", description = "", category = "", customFieldsPD = [], buildDepends = [Dependency (PackageName "RefSerialize") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,1,0], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,1,0], versionTags = []})))),Dependency (PackageName "TCache") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,11,0,0], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,11,0,0], versionTags = []})))),Dependency (PackageName "Workflow") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,8,0,8], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,8,0,8], versionTags = []})))),Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [4,5,1,0], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [4,5,1,0], versionTags = []})))),Dependency (PackageName "binary") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,6,4,0], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,6,4,0], versionTags = []})))),Dependency (PackageName "bytestring") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,10,4,0], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,10,4,0], versionTags = []})))),Dependency (PackageName "containers") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,4,2,1], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,4,2,1], versionTags = []})))),Dependency (PackageName "distributed-process") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,4,2], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,4,2], versionTags = []})))),Dependency (PackageName "distributed-process-simplelocalnet") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,0,9], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,0,9], versionTags = []})))),Dependency (PackageName "distributed-static") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,1,1], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,1,1], versionTags = []})))),Dependency (PackageName "ghc-prim") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,0,0], versionTags = []}))),Dependency (PackageName "hashtables") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,2,1], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,2,1], versionTags = []})))),Dependency (PackageName "network") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,4,2,0], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,4,2,0], versionTags = []})))),Dependency (PackageName "old-time") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []})))),Dependency (PackageName "primitive") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,5,0,1], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,5,0,1], versionTags = []})))),Dependency (PackageName "stm") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,4,2], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,4,2], versionTags = []})))),Dependency (PackageName "syb") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,6,1], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,6,1], versionTags = []})))),Dependency (PackageName "template-haskell") (IntersectVersionRanges (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,7,0,0], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,7,0,0], versionTags = []}))))], specVersionRaw = Right (UnionVersionRanges (ThisVersion (Version {versionBranch = [1,2], versionTags = []})) (LaterVersion (Version {versionBranch = [1,2], versionTags = []}))), buildType = Just Simple, library = Just (Library {exposedModules = [ModuleName ["CloudSync"],ModuleName ["EventSourcing"],ModuleName ["DistribUtils"]], libExposed = True, libBuildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = ["-DMAIN_FUNCTION=testMain"], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["src"], otherModules = [], defaultLanguage = Nothing, otherLanguages = [], defaultExtensions = [], otherExtensions = [], oldExtensions = [], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "RefSerialize") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,1,0], versionTags = []}))),Dependency (PackageName "TCache") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,11,0,0], versionTags = []}))),Dependency (PackageName "Workflow") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,8,0,8], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [4,5,1,0], versionTags = []}))),Dependency (PackageName "binary") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,6,4,0], versionTags = []}))),Dependency (PackageName "bytestring") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,10,4,0], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,4,2,1], versionTags = []}))),Dependency (PackageName "distributed-process") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,4,2], versionTags = []}))),Dependency (PackageName "distributed-process-simplelocalnet") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,0,9], versionTags = []}))),Dependency (PackageName "distributed-static") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,1,1], versionTags = []}))),Dependency (PackageName "ghc-prim") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,0,0], versionTags = []}))),Dependency (PackageName "hashtables") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,2,1], versionTags = []}))),Dependency (PackageName "network") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,4,2,0], versionTags = []}))),Dependency (PackageName "old-time") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []}))),Dependency (PackageName "primitive") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,5,0,1], versionTags = []}))),Dependency (PackageName "stm") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,4,2], versionTags = []}))),Dependency (PackageName "syb") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,6,1], versionTags = []}))),Dependency (PackageName "template-haskell") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,7,0,0], versionTags = []})))]}}), executables = [Executable {exeName = "cloudsync", modulePath = "Main.hs", buildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = ["-DMAIN_FUNCTION=testMain"], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["src"], otherModules = [ModuleName ["Callsample"]], defaultLanguage = Nothing, otherLanguages = [], defaultExtensions = [], otherExtensions = [], oldExtensions = [], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "RefSerialize") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,1,0], versionTags = []}))),Dependency (PackageName "TCache") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,11,0,0], versionTags = []}))),Dependency (PackageName "Workflow") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,8,0,8], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [4,5,1,0], versionTags = []}))),Dependency (PackageName "binary") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,6,4,0], versionTags = []}))),Dependency (PackageName "bytestring") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,10,4,0], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,4,2,1], versionTags = []}))),Dependency (PackageName "distributed-process") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,4,2], versionTags = []}))),Dependency (PackageName "distributed-process-simplelocalnet") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,0,9], versionTags = []}))),Dependency (PackageName "distributed-static") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,1,1], versionTags = []}))),Dependency (PackageName "hashtables") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,2,1], versionTags = []}))),Dependency (PackageName "network") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,4,2,0], versionTags = []}))),Dependency (PackageName "old-time") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []}))),Dependency (PackageName "primitive") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,5,0,1], versionTags = []}))),Dependency (PackageName "stm") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,4,2], versionTags = []}))),Dependency (PackageName "syb") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,6,1], versionTags = []}))),Dependency (PackageName "template-haskell") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [2,7,0,0], versionTags = []})))]}}], testSuites = [], benchmarks = [], dataFiles = [], dataDir = "", extraSrcFiles = [], extraTmpFiles = [], extraDocFiles = []}, withPrograms = [("alex",ConfiguredProgram {programId = "alex", programVersion = Just (Version {versionBranch = [3,0,1], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/alex"}}),("ar",ConfiguredProgram {programId = "ar", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/ar"}}),("gcc",ConfiguredProgram {programId = "gcc", programVersion = Just (Version {versionBranch = [4,7], versionTags = []}), programDefaultArgs = ["-Wl,--hash-size=31","-Wl,--reduce-memory-overheads"], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/gcc"}}),("ghc",ConfiguredProgram {programId = "ghc", programVersion = Just (Version {versionBranch = [7,4,2], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/ghc"}}),("ghc-pkg",ConfiguredProgram {programId = "ghc-pkg", programVersion = Just (Version {versionBranch = [7,4,2], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/ghc-pkg"}}),("haddock",ConfiguredProgram {programId = "haddock", programVersion = Just (Version {versionBranch = [2,11,0], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/haddock"}}),("happy",ConfiguredProgram {programId = "happy", programVersion = Just (Version {versionBranch = [1,18,9], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/happy"}}),("hpc",ConfiguredProgram {programId = "hpc", programVersion = Just (Version {versionBranch = [0,6], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/hpc"}}),("hsc2hs",ConfiguredProgram {programId = "hsc2hs", programVersion = Just (Version {versionBranch = [0,67], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/hsc2hs"}}),("ld",ConfiguredProgram {programId = "ld", programVersion = Nothing, programDefaultArgs = ["-x","--hash-size=31","--reduce-memory-overheads"], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/ld"}}),("ranlib",ConfiguredProgram {programId = "ranlib", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/ranlib"}}),("strip",ConfiguredProgram {programId = "strip", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/usr/bin/strip"}}),("tar",ConfiguredProgram {programId = "tar", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")], programLocation = FoundOnSystem {locationPath = "/bin/tar"}})], withPackageDB = [GlobalPackageDB,UserPackageDB], withVanillaLib = True, withProfLib = False, withSharedLib = False, withDynExe = False, withProfExe = False, withOptimization = NormalOptimisation, withGHCiLib = False, splitObjs = False, stripExes = True, progPrefix = "", progSuffix = ""}